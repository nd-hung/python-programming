{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"L\u1eadp tr\u00ecnh Python \u00b6 Programming with Python T\u00f3m t\u1eaft l\u00fd thuy\u1ebft B\u00e0i th\u1ef1c h\u00e0nh C\u00e1c ch\u1ee7 \u0111\u1ec1 ch\u00ednh \u00b6 Gi\u1edbi thi\u1ec7u Python \u00b6 Python c\u01a1 b\u1ea3n \u00b6 Python n\u00e2ng cao \u00b6 L\u1eadp tr\u00ecnh h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng v\u1edbi Python \u00b6 M\u1ed9t s\u1ed1 th\u01b0 vi\u1ec7n Python th\u00f4ng d\u1ee5ng \u00b6 T\u1ea1o \u1ee9ng d\u1ee5ng GUI \u00b6 T\u1ea1o \u1ee9ng d\u1ee5ng web v\u1edbi Python \u00b6 X\u00e2y d\u1ef1ng, tri\u1ec3n khai \u1ee9ng d\u1ee5ng AI \u00b6 B\u00e0i th\u1ef1c h\u00e0nh \u00b6 T\u00e0i li\u1ec7u tham kh\u1ea3o \u00b6 S\u00e1ch, gi\u00e1o tr\u00ecnh \u00b6 Python c\u01a1 b\u1ea3n. B\u00f9i Vi\u1ec7t H\u00e0. NXB \u0110HQG H\u00e0 N\u1ed9i, 2020 Python Crash Course. Eric Matthes. No Starch Press, 2016 Head-First Python, 2nd edition. Paul Barry. O\u2019Reilly, 2016 Invent Your Own Computer Games with Python, 4th edition. Al Sweigart. No Starch, 2017 Think Python: How to Think Like a Computer Scientist, 2nd edition. Allen B. Downey. O\u2019Reilly, 2015 Learn Python 3 the Hard Way. Zed A. Shaw. Addison-Wesley, 2016 Introduction to Machine Learning with Python. Andreas C.Muller, Sarah Guido. O'Reilly Media, 2016 Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow, 2nd Edition. Aur\u00e9lien G\u00e9ron. O'Reilly Media, 2019 T\u00e0i li\u1ec7u tr\u1ef1c tuy\u1ebfn \u00b6 Harvard University - Introduction to Proramming with Python Python.org - Python Tutorial Learn Python W3School - Python Tutorial","title":"Home"},{"location":"#lap-trinh-python","text":"Programming with Python T\u00f3m t\u1eaft l\u00fd thuy\u1ebft B\u00e0i th\u1ef1c h\u00e0nh","title":"L\u1eadp tr\u00ecnh Python"},{"location":"#cac-chu-e-chinh","text":"","title":"C\u00e1c ch\u1ee7 \u0111\u1ec1 ch\u00ednh"},{"location":"#gioi-thieu-python","text":"","title":"Gi\u1edbi thi\u1ec7u Python"},{"location":"#python-co-ban","text":"","title":"Python c\u01a1 b\u1ea3n"},{"location":"#python-nang-cao","text":"","title":"Python n\u00e2ng cao"},{"location":"#lap-trinh-huong-oi-tuong-voi-python","text":"","title":"L\u1eadp tr\u00ecnh h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng v\u1edbi Python"},{"location":"#mot-so-thu-vien-python-thong-dung","text":"","title":"M\u1ed9t s\u1ed1 th\u01b0 vi\u1ec7n Python th\u00f4ng d\u1ee5ng"},{"location":"#tao-ung-dung-gui","text":"","title":"T\u1ea1o \u1ee9ng d\u1ee5ng GUI"},{"location":"#tao-ung-dung-web-voi-python","text":"","title":"T\u1ea1o \u1ee9ng d\u1ee5ng web v\u1edbi Python"},{"location":"#xay-dung-trien-khai-ung-dung-ai","text":"","title":"X\u00e2y d\u1ef1ng, tri\u1ec3n khai \u1ee9ng d\u1ee5ng AI"},{"location":"#bai-thuc-hanh","text":"","title":"B\u00e0i th\u1ef1c h\u00e0nh"},{"location":"#tai-lieu-tham-khao","text":"","title":"T\u00e0i li\u1ec7u tham kh\u1ea3o"},{"location":"#sach-giao-trinh","text":"Python c\u01a1 b\u1ea3n. B\u00f9i Vi\u1ec7t H\u00e0. NXB \u0110HQG H\u00e0 N\u1ed9i, 2020 Python Crash Course. Eric Matthes. No Starch Press, 2016 Head-First Python, 2nd edition. Paul Barry. O\u2019Reilly, 2016 Invent Your Own Computer Games with Python, 4th edition. Al Sweigart. No Starch, 2017 Think Python: How to Think Like a Computer Scientist, 2nd edition. Allen B. Downey. O\u2019Reilly, 2015 Learn Python 3 the Hard Way. Zed A. Shaw. Addison-Wesley, 2016 Introduction to Machine Learning with Python. Andreas C.Muller, Sarah Guido. O'Reilly Media, 2016 Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow, 2nd Edition. Aur\u00e9lien G\u00e9ron. O'Reilly Media, 2019","title":"S\u00e1ch, gi\u00e1o tr\u00ecnh"},{"location":"#tai-lieu-truc-tuyen","text":"Harvard University - Introduction to Proramming with Python Python.org - Python Tutorial Learn Python W3School - Python Tutorial","title":"T\u00e0i li\u1ec7u tr\u1ef1c tuy\u1ebfn"},{"location":"author/about/","text":"Lecturer Information \u00b6 Lecturer \u00b6 Dr. Hung Nguyen , Deparment of Software Engineering, Faculty of Information Technology, Nha Trang University Email: hungnd {at} ntu.edu.vn Acknowledgement \u00b6 This document was built with MkDocs and powered by GitHub .","title":"About"},{"location":"author/about/#lecturer-information","text":"","title":"Lecturer Information"},{"location":"author/about/#lecturer","text":"Dr. Hung Nguyen , Deparment of Software Engineering, Faculty of Information Technology, Nha Trang University Email: hungnd {at} ntu.edu.vn","title":"Lecturer"},{"location":"author/about/#acknowledgement","text":"This document was built with MkDocs and powered by GitHub .","title":"Acknowledgement"},{"location":"author/acknowledgement/","text":"Acknowledgement \u00b6 This document built with MkDocs , powered by Github .","title":"Acknowledgement"},{"location":"author/acknowledgement/#acknowledgement","text":"This document built with MkDocs , powered by Github .","title":"Acknowledgement"},{"location":"labs/","text":"B\u00e0i th\u1ef1c h\u00e0nh \u00b6 Labs","title":"B\u00e0i th\u1ef1c h\u00e0nh"},{"location":"labs/#bai-thuc-hanh","text":"Labs","title":"B\u00e0i th\u1ef1c h\u00e0nh"},{"location":"labs/00-installation/","text":"","title":"Index"},{"location":"topics/","text":"C\u00e1c ch\u1ee7 \u0111\u1ec1 ch\u00ednh \u00b6 T\u1ed5ng quan v\u1ec1 l\u1eadp tr\u00ecnh \u00b6 C\u00e1c kh\u00e1i ni\u1ec7m c\u01a1 b\u1ea3n v\u1ec1 l\u1eadp tr\u00ecnh C\u00e1c ph\u01b0\u01a1ng ph\u00e1p l\u1eadp tr\u00ecnh Ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh Python Python c\u01a1 b\u1ea3n \u00b6 C\u00e1c ki\u1ec3u d\u1eef li\u1ec7u c\u01a1 b\u1ea3n c\u1ee7a Python Nh\u1eadp xu\u1ea5t d\u1eef li\u1ec7u C\u00e1c c\u1ea5u tr\u00fac \u0111i\u1ec1u khi\u1ec3n L\u1eadp tr\u00ecnh v\u1edbi h\u00e0m trong Python L\u1eadp tr\u00ecnh h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng v\u1edbi Python \u00b6 T\u1ed5ng quan v\u1ec1 ph\u01b0\u01a1ng ph\u00e1p l\u1eadp tr\u00ecnh h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng","title":"C\u00e1c ch\u1ee7 \u0111\u1ec1 ch\u00ednh"},{"location":"topics/#cac-chu-e-chinh","text":"","title":"C\u00e1c ch\u1ee7 \u0111\u1ec1 ch\u00ednh"},{"location":"topics/#tong-quan-ve-lap-trinh","text":"C\u00e1c kh\u00e1i ni\u1ec7m c\u01a1 b\u1ea3n v\u1ec1 l\u1eadp tr\u00ecnh C\u00e1c ph\u01b0\u01a1ng ph\u00e1p l\u1eadp tr\u00ecnh Ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh Python","title":"T\u1ed5ng quan v\u1ec1 l\u1eadp tr\u00ecnh"},{"location":"topics/#python-co-ban","text":"C\u00e1c ki\u1ec3u d\u1eef li\u1ec7u c\u01a1 b\u1ea3n c\u1ee7a Python Nh\u1eadp xu\u1ea5t d\u1eef li\u1ec7u C\u00e1c c\u1ea5u tr\u00fac \u0111i\u1ec1u khi\u1ec3n L\u1eadp tr\u00ecnh v\u1edbi h\u00e0m trong Python","title":"Python c\u01a1 b\u1ea3n"},{"location":"topics/#lap-trinh-huong-oi-tuong-voi-python","text":"T\u1ed5ng quan v\u1ec1 ph\u01b0\u01a1ng ph\u00e1p l\u1eadp tr\u00ecnh h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng","title":"L\u1eadp tr\u00ecnh h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng v\u1edbi Python"},{"location":"topics/advanced-python/","text":"Python n\u00e2ng cao \u00b6 Advanced Python H\u00e0m Python \u00b6 H\u00e0m l\u00e0 m\u1ed9t \u0111o\u1ea1n m\u00e3 ngu\u1ed3n \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1ec3 th\u1ef1c hi\u1ec7n m\u1ed9t ch\u1ee9c n\u0103ng chuy\u00ean bi\u1ec7t. H\u00e0m ch\u1ec9 th\u1ef1c thi khi \u0111\u01b0\u1ee3c g\u1ecdi. C\u00f3 th\u1ec3 g\u1ecdi h\u00e0m nhi\u1ec1u l\u1ea7n v\u1edbi c\u00e1c \u0111\u1ed1i s\u1ed1 (d\u1eef li\u1ec7u v\u00e0o) kh\u00e1c nhau. C\u00f3 3 lo\u1ea1i h\u00e0m trong Python: H\u00e0m d\u1ef1ng s\u1eb5n (built-in functions). V\u00ed d\u1ee5: abs(), range(), sorted(),... H\u00e0m \u0111\u1ecbnh ngh\u0129a trong c\u00e1c th\u01b0 vi\u1ec7n do b\u00ean th\u1ee9 ba ph\u00e1t tri\u1ec3n. V\u00ed d\u1ee5: numpy. H\u00e0m do ng\u01b0\u1eddi d\u00f9ng (l\u1eadp tr\u00ecnh vi\u00ean) t\u1ef1 \u0111\u1ecbnh ngh\u0129a C\u00e1c b\u01b0\u1edbc x\u00e2y d\u1ef1ng h\u00e0m \u00b6 \u0110\u1ec3 x\u00e2y d\u1ef1ng m\u1ed9t h\u00e0m, c\u1ea7n x\u00e1c \u0111\u1ecbnh c\u00e1c th\u00e0nh ph\u1ea7n sau: T\u00ean h\u00e0m: \u0110\u1eb7t theo quy t\u1eafc \u0111\u1ecbnh danh c\u1ee7a Python. N\u00ean \u0111\u1eb7t t\u00ean h\u00e0m ng\u1eafn g\u1ecdn, m\u00f4 t\u1ea3 \u0111\u01b0\u1ee3c ch\u1ee9c n\u0103ng c\u1ee7a h\u00e0m. Danh s\u00e1ch tham s\u1ed1: L\u00e0 c\u00e1c d\u1eef li\u1ec7u \u0111\u1ea7u v\u00e0o cho h\u00e0m x\u1eed l\u00fd. Gi\u00e1 tr\u1ecb tr\u1ea3 v\u1ec1: K\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 cho l\u1eddi g\u1ecdi h\u00e0m. C\u00fa ph\u00e1p def <T\u00ean h\u00e0m>([<Tham s\u1ed1 1>, <Tham s\u1ed1 2>,...]): <C\u00e1c l\u1ec7nh> [return <Bi\u1ec3u th\u1ee9c>] V\u00ed d\u1ee5 H\u00e0m in ra m\u00e0n h\u00ecnh c\u00e2u 'Hello world!' # C\u00e0i \u0111\u1eb7t h\u00e0m def SayHi(): print('Hello World!') # S\u1eed d\u1ee5ng h\u00e0m SayHi() H\u00e0m in ra m\u00e0n h\u00ecnh m\u1ed9t th\u00f4ng \u0111i\u1ec7p t\u00f9y ch\u1ecdn: # C\u00e0i \u0111\u1eb7t h\u00e0m def PrintMessage(msg): print(msg) # S\u1eed d\u1ee5ng h\u00e0m msg1 = 'Hello World' PrintMessage(msg1) PrintMessage('I love Python') H\u00e0m nh\u1eadn v\u00e0o 2 s\u1ed1 nguy\u00ean, t\u00ednh v\u00e0 in ra m\u00e0n h\u00ecnh t\u1ed5ng c\u1ee7a ch\u00fang: # C\u00e0i \u0111\u1eb7t h\u00e0m def TinhTong(a, b): tong = a + b print(f'{a} + {b} = {tong}') # S\u1eed d\u1ee5ng h\u00e0m x, y = 37, 21 a, b = 6, 9 TinhTong(x, y) TinhTong(b, a) H\u00e0m nh\u1eadn v\u00e0o 1 s\u1ed1 t\u1ef1 nhi\u00ean, tr\u1ea3 v\u1ec1 True n\u1ebfu l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1: # C\u00e0i \u0111\u1eb7t h\u00e0m def LaSNT(n): if n < 2: return False for i in range(2, n//2+1): if n%i ==0: return False return True # S\u1eed d\u1ee5ng h\u00e0m print(LaSNT(8)) print(LaSNT(13)) H\u00e0m lambda \u00b6 H\u00e0m lambda l\u00e0 d\u1ea1ng h\u00e0m kh\u00f4ng c\u00f3 t\u00ean, nh\u1eadn v\u00e0o m\u1ed9t danh s\u00e1ch \u0111\u1ed1i s\u1ed1 v\u00e0 tr\u1ea3 v\u1ec1 m\u1ed9t bi\u1ec3u th\u1ee9c. C\u00fa ph\u00e1p: lambda <DS tham s\u1ed1>:<Bi\u1ec3u th\u1ee9c> V\u00ed d\u1ee5 x = lambda a : a + 10 print(x(5)) y = lambda(a,b: a+b) print(y(9, 6)) H\u00e0m map() \u00b6 H\u00e0m map() s\u1ebd g\u1ecdi h\u00e0m \u0111\u01b0\u1ee3c ch\u1ec9 ra v\u1edbi \u0111\u1ed1i s\u1ed1 l\u00e0 t\u1eebng ph\u1ea7n t\u1eed trong danh s\u00e1ch. K\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 (l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng ki\u1ec3u map) c\u00f3 th\u1ec3 chuy\u1ec3n th\u00e0nh danh s\u00e1ch qua h\u00e0m list(), ho\u1eb7c t\u1eadp h\u1ee3p qua h\u00e0m set(). C\u00fa ph\u00e1p \u00b6 map(function, iterables) Trong \u0111\u00f3, function l\u00e0 t\u00ean h\u00e0m, iterables l\u00e0 m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng ch\u1ee9a danh s\u00e1ch c\u00e1c ph\u1ea7n t\u1eed. V\u00ed d\u1ee5 \u00b6 def square(n) -> int: return n**2 nums = [1, 2, 3, 4, 5] squaredNums = list(map(square, nums)) print(squaredNums) #[1, 4, 9, 16, 25] places = ['Nha', 'Trang', 'Kh\u00e1nh', 'H\u00f2a'] lens = list(map(lambda s: len(s), places)) print(lens) #[3, 5, 5, 3] H\u00e0m filter() \u00b6 H\u00e0m filter() l\u1ecdc c\u00e1c ph\u1ea7n t\u1eed trong danh s\u00e1ch th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n c\u1ee7a h\u00e0m \u0111\u1eb7t ra. C\u00fa ph\u00e1p \u00b6 filter(function, iterables) V\u00ed d\u1ee5 \u00b6 nums = [1, 2, 3, 4, 5] # L\u1ecdc c\u00e1c s\u1ed1 l\u1ebb trong d\u00e3y oddNums = list(filter(lambda n: n % 2 != 0, nums)) print(oddNums) #[1, 3, 5]","title":"Python n\u00e2ng cao"},{"location":"topics/advanced-python/#python-nang-cao","text":"Advanced Python","title":"Python n\u00e2ng cao"},{"location":"topics/advanced-python/#ham-python","text":"H\u00e0m l\u00e0 m\u1ed9t \u0111o\u1ea1n m\u00e3 ngu\u1ed3n \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1ec3 th\u1ef1c hi\u1ec7n m\u1ed9t ch\u1ee9c n\u0103ng chuy\u00ean bi\u1ec7t. H\u00e0m ch\u1ec9 th\u1ef1c thi khi \u0111\u01b0\u1ee3c g\u1ecdi. C\u00f3 th\u1ec3 g\u1ecdi h\u00e0m nhi\u1ec1u l\u1ea7n v\u1edbi c\u00e1c \u0111\u1ed1i s\u1ed1 (d\u1eef li\u1ec7u v\u00e0o) kh\u00e1c nhau. C\u00f3 3 lo\u1ea1i h\u00e0m trong Python: H\u00e0m d\u1ef1ng s\u1eb5n (built-in functions). V\u00ed d\u1ee5: abs(), range(), sorted(),... H\u00e0m \u0111\u1ecbnh ngh\u0129a trong c\u00e1c th\u01b0 vi\u1ec7n do b\u00ean th\u1ee9 ba ph\u00e1t tri\u1ec3n. V\u00ed d\u1ee5: numpy. H\u00e0m do ng\u01b0\u1eddi d\u00f9ng (l\u1eadp tr\u00ecnh vi\u00ean) t\u1ef1 \u0111\u1ecbnh ngh\u0129a","title":"H\u00e0m Python"},{"location":"topics/advanced-python/#cac-buoc-xay-dung-ham","text":"\u0110\u1ec3 x\u00e2y d\u1ef1ng m\u1ed9t h\u00e0m, c\u1ea7n x\u00e1c \u0111\u1ecbnh c\u00e1c th\u00e0nh ph\u1ea7n sau: T\u00ean h\u00e0m: \u0110\u1eb7t theo quy t\u1eafc \u0111\u1ecbnh danh c\u1ee7a Python. N\u00ean \u0111\u1eb7t t\u00ean h\u00e0m ng\u1eafn g\u1ecdn, m\u00f4 t\u1ea3 \u0111\u01b0\u1ee3c ch\u1ee9c n\u0103ng c\u1ee7a h\u00e0m. Danh s\u00e1ch tham s\u1ed1: L\u00e0 c\u00e1c d\u1eef li\u1ec7u \u0111\u1ea7u v\u00e0o cho h\u00e0m x\u1eed l\u00fd. Gi\u00e1 tr\u1ecb tr\u1ea3 v\u1ec1: K\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 cho l\u1eddi g\u1ecdi h\u00e0m. C\u00fa ph\u00e1p def <T\u00ean h\u00e0m>([<Tham s\u1ed1 1>, <Tham s\u1ed1 2>,...]): <C\u00e1c l\u1ec7nh> [return <Bi\u1ec3u th\u1ee9c>] V\u00ed d\u1ee5 H\u00e0m in ra m\u00e0n h\u00ecnh c\u00e2u 'Hello world!' # C\u00e0i \u0111\u1eb7t h\u00e0m def SayHi(): print('Hello World!') # S\u1eed d\u1ee5ng h\u00e0m SayHi() H\u00e0m in ra m\u00e0n h\u00ecnh m\u1ed9t th\u00f4ng \u0111i\u1ec7p t\u00f9y ch\u1ecdn: # C\u00e0i \u0111\u1eb7t h\u00e0m def PrintMessage(msg): print(msg) # S\u1eed d\u1ee5ng h\u00e0m msg1 = 'Hello World' PrintMessage(msg1) PrintMessage('I love Python') H\u00e0m nh\u1eadn v\u00e0o 2 s\u1ed1 nguy\u00ean, t\u00ednh v\u00e0 in ra m\u00e0n h\u00ecnh t\u1ed5ng c\u1ee7a ch\u00fang: # C\u00e0i \u0111\u1eb7t h\u00e0m def TinhTong(a, b): tong = a + b print(f'{a} + {b} = {tong}') # S\u1eed d\u1ee5ng h\u00e0m x, y = 37, 21 a, b = 6, 9 TinhTong(x, y) TinhTong(b, a) H\u00e0m nh\u1eadn v\u00e0o 1 s\u1ed1 t\u1ef1 nhi\u00ean, tr\u1ea3 v\u1ec1 True n\u1ebfu l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1: # C\u00e0i \u0111\u1eb7t h\u00e0m def LaSNT(n): if n < 2: return False for i in range(2, n//2+1): if n%i ==0: return False return True # S\u1eed d\u1ee5ng h\u00e0m print(LaSNT(8)) print(LaSNT(13))","title":"C\u00e1c b\u01b0\u1edbc x\u00e2y d\u1ef1ng h\u00e0m"},{"location":"topics/advanced-python/#ham-lambda","text":"H\u00e0m lambda l\u00e0 d\u1ea1ng h\u00e0m kh\u00f4ng c\u00f3 t\u00ean, nh\u1eadn v\u00e0o m\u1ed9t danh s\u00e1ch \u0111\u1ed1i s\u1ed1 v\u00e0 tr\u1ea3 v\u1ec1 m\u1ed9t bi\u1ec3u th\u1ee9c. C\u00fa ph\u00e1p: lambda <DS tham s\u1ed1>:<Bi\u1ec3u th\u1ee9c> V\u00ed d\u1ee5 x = lambda a : a + 10 print(x(5)) y = lambda(a,b: a+b) print(y(9, 6))","title":"H\u00e0m lambda"},{"location":"topics/advanced-python/#ham-map","text":"H\u00e0m map() s\u1ebd g\u1ecdi h\u00e0m \u0111\u01b0\u1ee3c ch\u1ec9 ra v\u1edbi \u0111\u1ed1i s\u1ed1 l\u00e0 t\u1eebng ph\u1ea7n t\u1eed trong danh s\u00e1ch. K\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 (l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng ki\u1ec3u map) c\u00f3 th\u1ec3 chuy\u1ec3n th\u00e0nh danh s\u00e1ch qua h\u00e0m list(), ho\u1eb7c t\u1eadp h\u1ee3p qua h\u00e0m set().","title":"H\u00e0m map()"},{"location":"topics/advanced-python/#cu-phap","text":"map(function, iterables) Trong \u0111\u00f3, function l\u00e0 t\u00ean h\u00e0m, iterables l\u00e0 m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng ch\u1ee9a danh s\u00e1ch c\u00e1c ph\u1ea7n t\u1eed.","title":"C\u00fa ph\u00e1p"},{"location":"topics/advanced-python/#vi-du","text":"def square(n) -> int: return n**2 nums = [1, 2, 3, 4, 5] squaredNums = list(map(square, nums)) print(squaredNums) #[1, 4, 9, 16, 25] places = ['Nha', 'Trang', 'Kh\u00e1nh', 'H\u00f2a'] lens = list(map(lambda s: len(s), places)) print(lens) #[3, 5, 5, 3]","title":"V\u00ed d\u1ee5"},{"location":"topics/advanced-python/#ham-filter","text":"H\u00e0m filter() l\u1ecdc c\u00e1c ph\u1ea7n t\u1eed trong danh s\u00e1ch th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n c\u1ee7a h\u00e0m \u0111\u1eb7t ra.","title":"H\u00e0m filter()"},{"location":"topics/advanced-python/#cu-phap_1","text":"filter(function, iterables)","title":"C\u00fa ph\u00e1p"},{"location":"topics/advanced-python/#vi-du_1","text":"nums = [1, 2, 3, 4, 5] # L\u1ecdc c\u00e1c s\u1ed1 l\u1ebb trong d\u00e3y oddNums = list(filter(lambda n: n % 2 != 0, nums)) print(oddNums) #[1, 3, 5]","title":"V\u00ed d\u1ee5"},{"location":"topics/gui/","text":"T\u1ea1o \u1ee9ng d\u1ee5ng GUI v\u1edbi Tkinter \u00b6 Python GUI development Gi\u1edbi thi\u1ec7u \u00b6 C\u00f3 nhi\u1ec1u th\u01b0 vi\u1ec7n GUI cho Python, trong \u0111\u00f3 Tkinter l\u00e0 th\u01b0 vi\u1ec7n chu\u1ea9n v\u00e0 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ed9ng r\u00e3i. C\u00e1c \u01b0u \u0111i\u1ec3m c\u1ee7a Tkinter bao g\u1ed3m h\u1ed7 tr\u1ee3 \u0111a n\u1ec1n t\u1ea3ng (cross-platform: ho\u1ea1t \u0111\u1ed9ng t\u1ed1t tr\u00ean Windows, macOS v\u00e0 Linux) v\u00e0 g\u1ecdn nh\u1eb9. T\u1ea1o \u1ee9ng d\u1ee5ng GUI \u0111\u1ea7u ti\u00ean \u00b6 Th\u00e0nh ph\u1ea7n c\u01a1 b\u1ea3n c\u1ee7a \u1ee9ng d\u1ee5ng GUI l\u00e0 c\u1eeda s\u1ed5 - l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng ch\u1ee9a m\u1ecdi th\u00e0nh ph\u1ea7n giao di\u1ec7n \u0111\u1ed3 h\u1ecda c\u1ee7a \u1ee9ng d\u1ee5ng, nh\u01b0 n\u00fat l\u1ec7nh, h\u1ed9p v\u0103n b\u1ea3n, nh\u00e3n, v.v.. g\u1ecdi l\u00e0 widgets. # Khai b\u00e1o l\u1edbp tkinter import tkinter as tk # T\u1ea1o c\u1eeda s\u1ed5 window = tk.Tk() # Th\u00eam nh\u00e3n ch\u1ee9a c\u00e2u 'Hello Python GUI from Tkinter' greeting = tk.Label(text=\"Hello, Tkinter\") # \u0110\u01b0a nh\u00e3n v\u00e0o window: greeting.pack() # Ch\u1ea1y Tkinter event loop window.mainloop() L\u00e0m vi\u1ec7c v\u1edbi c\u00e1c Widgets \u00b6 Widgets l\u00e0 c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng giao ti\u1ebfp \u0111\u1ed3 h\u1ecda v\u1edbi ng\u01b0\u1eddi d\u00f9ng. Tkinter x\u00e2y d\u1ef1ng m\u1ed7i widget d\u01b0\u1edbi d\u1ea1ng l\u1edbp \u0111\u1ed1i t\u01b0\u1ee3ng. Widget Class Description Label A widget used to display text on the screen Button A button that can contain text and can perform an action when clicked Entry A text entry widget that allows only a single line of text Text A text entry widget that allows multiline text entry Frame A rectangular region used to group related widgets or provide padding between widgets M\u1ed9t \u1ee9ng d\u1ee5ng ph\u1ee9c t\u1ea1p h\u01a1n: BMI calculator from tkinter import * def bmi_calculate(): height = float(h_entry.get()) # l\u1ea5y d\u1eef li\u1ec7u t\u1eeb \u0111\u1ed1i t\u01b0\u1ee3ng l\u1edbp Entry -> chuy\u1ec3n ki\u1ec3u float weight = float(w_entry.get()) bmi = weight/(height**2) # t\u00ednh BMI output_label.configure(text='BMI: {:.1f}'.format(bmi)) # Xu\u1ea5t k\u1ebft qu\u1ea3 # Kh\u1edfi t\u1ea1o c\u1eeda s\u1ed5 \u1ee9ng d\u1ee5ng root = Tk() root.title('BMI Calculator') # T\u1ea1o c\u00e1c nh\u00e3n (label) trong c\u1eeda s\u1ed5 h_message_label = Label(text='Nh\u1eadp chi\u1ec1u cao (m)', font=('Verdana', 16)) w_message_label = Label(text='Nh\u1eadp c\u00e2n n\u1eb7ng (kg)', font=('Verdana', 16)) output_label = Label(font=('Verdana', 16)) # T\u1ea1o textbox nh\u1eadp li\u1ec7u h_entry = Entry(font=('Verdana', 16), width=4) w_entry = Entry(font=('Verdana', 16), width=4) # T\u1ea1o n\u00fat l\u1ec7nh (button) calc_button = Button(text='T\u00ednh', font=('Verdana', 16), command=bmi_calculate) # S\u1eafp x\u1ebfp v\u1ecb tr\u00ed c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng \u0111\u1ed3 h\u1ecda h_message_label.grid(row=0, column=0) w_message_label.grid(row=1, column=0) h_entry.grid(row=0, column=1) w_entry.grid(row=1, column=1) calc_button.grid(row=0, column=2, rowspan=2) output_label.grid(row=2, column=0, columnspan=3) # Ch\u1ea1y Tkinter event loop mainloop()","title":"T\u1ea1o \u1ee9ng d\u1ee5ng GUI v\u1edbi Tkinter"},{"location":"topics/gui/#tao-ung-dung-gui-voi-tkinter","text":"Python GUI development","title":"T\u1ea1o \u1ee9ng d\u1ee5ng GUI v\u1edbi Tkinter"},{"location":"topics/gui/#gioi-thieu","text":"C\u00f3 nhi\u1ec1u th\u01b0 vi\u1ec7n GUI cho Python, trong \u0111\u00f3 Tkinter l\u00e0 th\u01b0 vi\u1ec7n chu\u1ea9n v\u00e0 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ed9ng r\u00e3i. C\u00e1c \u01b0u \u0111i\u1ec3m c\u1ee7a Tkinter bao g\u1ed3m h\u1ed7 tr\u1ee3 \u0111a n\u1ec1n t\u1ea3ng (cross-platform: ho\u1ea1t \u0111\u1ed9ng t\u1ed1t tr\u00ean Windows, macOS v\u00e0 Linux) v\u00e0 g\u1ecdn nh\u1eb9.","title":"Gi\u1edbi thi\u1ec7u"},{"location":"topics/gui/#tao-ung-dung-gui-au-tien","text":"Th\u00e0nh ph\u1ea7n c\u01a1 b\u1ea3n c\u1ee7a \u1ee9ng d\u1ee5ng GUI l\u00e0 c\u1eeda s\u1ed5 - l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng ch\u1ee9a m\u1ecdi th\u00e0nh ph\u1ea7n giao di\u1ec7n \u0111\u1ed3 h\u1ecda c\u1ee7a \u1ee9ng d\u1ee5ng, nh\u01b0 n\u00fat l\u1ec7nh, h\u1ed9p v\u0103n b\u1ea3n, nh\u00e3n, v.v.. g\u1ecdi l\u00e0 widgets. # Khai b\u00e1o l\u1edbp tkinter import tkinter as tk # T\u1ea1o c\u1eeda s\u1ed5 window = tk.Tk() # Th\u00eam nh\u00e3n ch\u1ee9a c\u00e2u 'Hello Python GUI from Tkinter' greeting = tk.Label(text=\"Hello, Tkinter\") # \u0110\u01b0a nh\u00e3n v\u00e0o window: greeting.pack() # Ch\u1ea1y Tkinter event loop window.mainloop()","title":"T\u1ea1o \u1ee9ng d\u1ee5ng GUI \u0111\u1ea7u ti\u00ean"},{"location":"topics/gui/#lam-viec-voi-cac-widgets","text":"Widgets l\u00e0 c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng giao ti\u1ebfp \u0111\u1ed3 h\u1ecda v\u1edbi ng\u01b0\u1eddi d\u00f9ng. Tkinter x\u00e2y d\u1ef1ng m\u1ed7i widget d\u01b0\u1edbi d\u1ea1ng l\u1edbp \u0111\u1ed1i t\u01b0\u1ee3ng. Widget Class Description Label A widget used to display text on the screen Button A button that can contain text and can perform an action when clicked Entry A text entry widget that allows only a single line of text Text A text entry widget that allows multiline text entry Frame A rectangular region used to group related widgets or provide padding between widgets M\u1ed9t \u1ee9ng d\u1ee5ng ph\u1ee9c t\u1ea1p h\u01a1n: BMI calculator from tkinter import * def bmi_calculate(): height = float(h_entry.get()) # l\u1ea5y d\u1eef li\u1ec7u t\u1eeb \u0111\u1ed1i t\u01b0\u1ee3ng l\u1edbp Entry -> chuy\u1ec3n ki\u1ec3u float weight = float(w_entry.get()) bmi = weight/(height**2) # t\u00ednh BMI output_label.configure(text='BMI: {:.1f}'.format(bmi)) # Xu\u1ea5t k\u1ebft qu\u1ea3 # Kh\u1edfi t\u1ea1o c\u1eeda s\u1ed5 \u1ee9ng d\u1ee5ng root = Tk() root.title('BMI Calculator') # T\u1ea1o c\u00e1c nh\u00e3n (label) trong c\u1eeda s\u1ed5 h_message_label = Label(text='Nh\u1eadp chi\u1ec1u cao (m)', font=('Verdana', 16)) w_message_label = Label(text='Nh\u1eadp c\u00e2n n\u1eb7ng (kg)', font=('Verdana', 16)) output_label = Label(font=('Verdana', 16)) # T\u1ea1o textbox nh\u1eadp li\u1ec7u h_entry = Entry(font=('Verdana', 16), width=4) w_entry = Entry(font=('Verdana', 16), width=4) # T\u1ea1o n\u00fat l\u1ec7nh (button) calc_button = Button(text='T\u00ednh', font=('Verdana', 16), command=bmi_calculate) # S\u1eafp x\u1ebfp v\u1ecb tr\u00ed c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng \u0111\u1ed3 h\u1ecda h_message_label.grid(row=0, column=0) w_message_label.grid(row=1, column=0) h_entry.grid(row=0, column=1) w_entry.grid(row=1, column=1) calc_button.grid(row=0, column=2, rowspan=2) output_label.grid(row=2, column=0, columnspan=3) # Ch\u1ea1y Tkinter event loop mainloop()","title":"L\u00e0m vi\u1ec7c v\u1edbi c\u00e1c Widgets"},{"location":"topics/overview/","text":"Gi\u1edbi thi\u1ec7u ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh Python \u00b6 Introduction to Python Ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh Python \u00b6 Ng\u00e0y nay, Python l\u00e0 m\u1ed9t trong nh\u1eefng ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ed9ng r\u00e3i nh\u1ea5t tr\u00ean th\u1ebf gi\u1edbi. C\u00e1c \u01b0u \u0111i\u1ec3m n\u1ed5i b\u1eadt c\u1ee7a Python l\u00e0: Python l\u00e0 ng\u00f4n ng\u1eef th\u00f4ng d\u1ecbch, h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng. Python c\u00f3 c\u00fa ph\u00e1p \u0111\u01a1n gi\u1ea3n, d\u1ec5 hi\u1ec3u. Ch\u01b0\u01a1ng tr\u00ecnh Python d\u1ec5 b\u1ea3o tr\u00ec, n\u00e2ng c\u1ea5p. Python ho\u1ea1t \u0111\u1ed9ng tr\u00ean \u0111a n\u1ec1n t\u1ea3ng: Windows, Linux v\u00e0 Mac. Kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng d\u1ec5 d\u00e0ng. C\u00e1c \u1ee9ng d\u1ee5ng c\u1ee7a Python \u00b6 L\u00e0 ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh \u0111a d\u1ee5ng, Python \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ed9ng r\u00e3i trong nhi\u1ec1u l\u0129nh v\u1ef1c: L\u1eadp tr\u00ecnh h\u1ec7 th\u1ed1ng (system programming) \u00b6 Python cung c\u1ea5p c\u00e1c th\u01b0 vi\u1ec7n d\u1ef1ng s\u1eb5n cho ph\u00e9p t\u1ea1o c\u00e1c \u1ee9ng d\u1ee5ng h\u1ec7 th\u1ed1ng g\u1ecdn nh\u1eb9, d\u1ec5 b\u1ea3o tr\u00ec. C\u00e1c lo\u1ea1i \u1ee9ng d\u1ee5ng bao g\u1ed3m x\u1eed l\u00fd file, x\u1eed l\u00fd song song v.v.. T\u1ea1o \u1ee9ng d\u1ee5ng GUI \u00b6 Python cung c\u1ea5p giao ti\u1ebfp chu\u1ea9n, h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng li\u00ean k\u1ebft \u0111\u1ebfn th\u01b0 vi\u1ec7n \u0111\u1ed3 h\u1ecda Tk GUI API (g\u1ecdi l\u00e0 tkinter), cho kh\u1ea3 n\u0103ng t\u1ea1o c\u00e1c \u1ee9ng d\u1ee5ng GUI nhanh ch\u00f3ng. M\u1ed9t s\u1ed1 th\u01b0 vi\u1ec7n kh\u00e1c g\u1ed3m PyQt, PyGTK. L\u1eadp tr\u00ecnh \u1ee9ng d\u1ee5ng Web/Internet \u00b6 Python cung c\u1ea5p c\u00f4ng c\u1ee5 l\u1eadp tr\u00ecnh socket, truy\u1ec1n d\u1eef li\u1ec7u qua m\u1ea1ng,x\u1eed l\u00fd t\u00e0i li\u1ec7u XML, JSON, x\u1eed l\u00fd email, v.v.. Ngo\u00e0i ra, c\u00f3 nhi\u1ec1u c\u00f4ng c\u1ee5 \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n b\u1edfi b\u00ean th\u1ee9 3 nh\u01b0 Django, web2py. L\u1eadp tr\u00ecnh c\u01a1 s\u1edf d\u1eef li\u1ec7u \u00b6 Python cung c\u1ea5p giao ti\u1ebfp k\u1ebft n\u1ed1i v\u1edbi c\u00e1c h\u1ec7 qu\u1ea3n tr\u1ecb c\u01a1 c\u01a1 s\u1edf d\u1eef li\u1ec7u quan h\u1ec7 ph\u1ed5 bi\u1ebfn nh\u01b0 Oracle. L\u1eadp tr\u00ecnh x\u1eed l\u00fd b\u00e0i to\u00e1n khoa h\u1ecdc \u00b6 Python ng\u00e0y nay \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong c\u00e1c b\u00e0i to\u00e1n khoa h\u1ecdc k\u1ef9 thu\u1eadt, v\u1edbi c\u00e1c th\u01b0 vi\u1ec7n x\u1eed l\u00fd s\u1ed1 r\u1ea5t m\u1ea1nh nh\u01b0 NumPy, SciPy. L\u1eadp tr\u00ecnh \u1ee9ng d\u1ee5ng khoa h\u1ecdc d\u1eef li\u1ec7u, tr\u00ed tu\u1ec7 nh\u00e2n t\u1ea1o, IoT \u00b6 C\u01a1 ch\u1ebf ho\u1ea1t \u0111\u1ed9ng c\u1ee7a Python \u00b6 Ng\u00f4n ng\u1eef Python ho\u1ea1t \u0111\u1ed9ng theo c\u01a1 ch\u1ebf th\u00f4ng d\u1ecbch.","title":"Gi\u1edbi thi\u1ec7u ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh Python"},{"location":"topics/overview/#gioi-thieu-ngon-ngu-lap-trinh-python","text":"Introduction to Python","title":"Gi\u1edbi thi\u1ec7u ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh Python"},{"location":"topics/overview/#ngon-ngu-lap-trinh-python","text":"Ng\u00e0y nay, Python l\u00e0 m\u1ed9t trong nh\u1eefng ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ed9ng r\u00e3i nh\u1ea5t tr\u00ean th\u1ebf gi\u1edbi. C\u00e1c \u01b0u \u0111i\u1ec3m n\u1ed5i b\u1eadt c\u1ee7a Python l\u00e0: Python l\u00e0 ng\u00f4n ng\u1eef th\u00f4ng d\u1ecbch, h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng. Python c\u00f3 c\u00fa ph\u00e1p \u0111\u01a1n gi\u1ea3n, d\u1ec5 hi\u1ec3u. Ch\u01b0\u01a1ng tr\u00ecnh Python d\u1ec5 b\u1ea3o tr\u00ec, n\u00e2ng c\u1ea5p. Python ho\u1ea1t \u0111\u1ed9ng tr\u00ean \u0111a n\u1ec1n t\u1ea3ng: Windows, Linux v\u00e0 Mac. Kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng d\u1ec5 d\u00e0ng.","title":"Ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh Python"},{"location":"topics/overview/#cac-ung-dung-cua-python","text":"L\u00e0 ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh \u0111a d\u1ee5ng, Python \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ed9ng r\u00e3i trong nhi\u1ec1u l\u0129nh v\u1ef1c:","title":"C\u00e1c \u1ee9ng d\u1ee5ng c\u1ee7a Python"},{"location":"topics/overview/#lap-trinh-he-thong-system-programming","text":"Python cung c\u1ea5p c\u00e1c th\u01b0 vi\u1ec7n d\u1ef1ng s\u1eb5n cho ph\u00e9p t\u1ea1o c\u00e1c \u1ee9ng d\u1ee5ng h\u1ec7 th\u1ed1ng g\u1ecdn nh\u1eb9, d\u1ec5 b\u1ea3o tr\u00ec. C\u00e1c lo\u1ea1i \u1ee9ng d\u1ee5ng bao g\u1ed3m x\u1eed l\u00fd file, x\u1eed l\u00fd song song v.v..","title":"L\u1eadp tr\u00ecnh h\u1ec7 th\u1ed1ng (system programming)"},{"location":"topics/overview/#tao-ung-dung-gui","text":"Python cung c\u1ea5p giao ti\u1ebfp chu\u1ea9n, h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng li\u00ean k\u1ebft \u0111\u1ebfn th\u01b0 vi\u1ec7n \u0111\u1ed3 h\u1ecda Tk GUI API (g\u1ecdi l\u00e0 tkinter), cho kh\u1ea3 n\u0103ng t\u1ea1o c\u00e1c \u1ee9ng d\u1ee5ng GUI nhanh ch\u00f3ng. M\u1ed9t s\u1ed1 th\u01b0 vi\u1ec7n kh\u00e1c g\u1ed3m PyQt, PyGTK.","title":"T\u1ea1o \u1ee9ng d\u1ee5ng GUI"},{"location":"topics/overview/#lap-trinh-ung-dung-webinternet","text":"Python cung c\u1ea5p c\u00f4ng c\u1ee5 l\u1eadp tr\u00ecnh socket, truy\u1ec1n d\u1eef li\u1ec7u qua m\u1ea1ng,x\u1eed l\u00fd t\u00e0i li\u1ec7u XML, JSON, x\u1eed l\u00fd email, v.v.. Ngo\u00e0i ra, c\u00f3 nhi\u1ec1u c\u00f4ng c\u1ee5 \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n b\u1edfi b\u00ean th\u1ee9 3 nh\u01b0 Django, web2py.","title":"L\u1eadp tr\u00ecnh \u1ee9ng d\u1ee5ng Web/Internet"},{"location":"topics/overview/#lap-trinh-co-so-du-lieu","text":"Python cung c\u1ea5p giao ti\u1ebfp k\u1ebft n\u1ed1i v\u1edbi c\u00e1c h\u1ec7 qu\u1ea3n tr\u1ecb c\u01a1 c\u01a1 s\u1edf d\u1eef li\u1ec7u quan h\u1ec7 ph\u1ed5 bi\u1ebfn nh\u01b0 Oracle.","title":"L\u1eadp tr\u00ecnh c\u01a1 s\u1edf d\u1eef li\u1ec7u"},{"location":"topics/overview/#lap-trinh-xu-ly-bai-toan-khoa-hoc","text":"Python ng\u00e0y nay \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong c\u00e1c b\u00e0i to\u00e1n khoa h\u1ecdc k\u1ef9 thu\u1eadt, v\u1edbi c\u00e1c th\u01b0 vi\u1ec7n x\u1eed l\u00fd s\u1ed1 r\u1ea5t m\u1ea1nh nh\u01b0 NumPy, SciPy.","title":"L\u1eadp tr\u00ecnh x\u1eed l\u00fd b\u00e0i to\u00e1n khoa h\u1ecdc"},{"location":"topics/overview/#lap-trinh-ung-dung-khoa-hoc-du-lieu-tri-tue-nhan-tao-iot","text":"","title":"L\u1eadp tr\u00ecnh \u1ee9ng d\u1ee5ng khoa h\u1ecdc d\u1eef li\u1ec7u, tr\u00ed tu\u1ec7 nh\u00e2n t\u1ea1o, IoT"},{"location":"topics/overview/#co-che-hoat-ong-cua-python","text":"Ng\u00f4n ng\u1eef Python ho\u1ea1t \u0111\u1ed9ng theo c\u01a1 ch\u1ebf th\u00f4ng d\u1ecbch.","title":"C\u01a1 ch\u1ebf ho\u1ea1t \u0111\u1ed9ng c\u1ee7a Python"},{"location":"topics/python-basic/","text":"Python c\u01a1 b\u1ea3n \u00b6 Python Basics Hello, World \u00b6 # Ch\u01b0\u01a1ng tr\u00ecnh \u0111\u1ea7u ti\u00ean: In ra m\u00e0n h\u00ecnh c\u00e2u \"Hello, World!\" print(\"Hello, World!\") Th\u1ef1c thi ch\u01b0\u01a1ng tr\u00ecnh Python \u00b6 Ch\u1ea1y t\u1eebng d\u00f2ng l\u1ec7nh \u00b6 C\u00e1c b\u01b0\u1edbc th\u1ef1c hi\u1ec7n: M\u1edf c\u1eeda s\u1ed5 ch\u1ebf \u0111\u1ed9 d\u00f2ng l\u1ec7nh (terminal). Nh\u1eadp python (ho\u1eb7c python3 ) v\u00e0 nh\u1ea5n Enter \u0111\u1ec3 m\u1edf Python ch\u1ebf \u0111\u1ed9 t\u01b0\u01a1ng t\u00e1c. Nh\u1eadp t\u1eebng d\u00f2ng l\u1ec7nh \u0111\u1ec3 th\u1ef1c thi. V\u00ed d\u1ee5: Ch\u1ea1y file m\u00e3 ngu\u1ed3n t\u1eeb ch\u1ebf \u0111\u1ed9 d\u00f2ng l\u1ec7nh \u00b6 M\u1edf c\u1eeda s\u1ed5 d\u00f2ng l\u1ec7nh (terminal). Nh\u1eadp python <[path_to/]python_script_file_name.py> v\u00e0 nh\u1ea5n Enter \u0111\u1ec3 th\u1ef1c thi. Tr\u00ecnh th\u00f4ng d\u1ecbch s\u1ebd l\u1ea7n l\u01b0\u1ee3t th\u1ef1c hi\u1ec7n c\u00e1c l\u1ec7nh trong file m\u00e3 ngu\u1ed3n. Th\u1ef1c thi ch\u01b0\u01a1ng tr\u00ecnh Python t\u1eeb m\u00f4i tr\u01b0\u1eddng ph\u00e1t tri\u1ec3n t\u00edch h\u1ee3p (IDE) \u00b6 M\u1edf IDE l\u1eadp tr\u00ecnh Python \u01b0a th\u00edch (PyCharm, VS Code, Spyder, IDLE,...). T\u1ea1o (ho\u1eb7c m\u1edf) file ch\u01b0\u01a1ng tr\u00ecnh Python. Nh\u1ea5n l\u1ec7nh Run \u0111\u1ec3 th\u1ef1c thi ch\u01b0\u01a1ng tr\u00ecnh. Kh\u1ed1i l\u1ec7nh \u00b6 Python s\u1eed d\u1ee5ng kho\u1ea3ng canh l\u1ec1 (indentation) \u0111\u1ec3 gi\u1edbi h\u1ea1n kh\u1ed1i l\u1ec7nh. S\u1ed1 kho\u1ea3ng tr\u1eafng tr\u01b0\u1edbc kh\u1ed1i l\u1ec7nh \u00edt nh\u1ea5t l\u00e0 1, th\u00f4ng d\u1ee5ng nh\u1ea5t l\u00e0 4. Trong m\u1ed9t kh\u1ed1i l\u1ec7nh, s\u1ed1 kho\u1ea3ng tr\u1eafng \u0111\u1ee9ng tr\u01b0\u1edbc m\u1ed7i d\u00f2ng l\u1ec7nh ph\u1ea3i b\u1eb1ng nhau. V\u00ed d\u1ee5: n = 123 if n % 2 == 0: print(\"%d l\u00e0 s\u1ed1 ch\u1eb5n\" % n) else: print(\"%d l\u00e0 s\u1ed1 l\u1ebb\" % n) Ki\u1ec3u d\u1eef li\u1ec7u v\u00e0 bi\u1ebfn \u00b6 Bi\u1ebfn \u00b6 Bi\u1ebfn l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng d\u00f9ng \u0111\u1ec3 l\u01b0u d\u1eef li\u1ec7u. Gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn c\u00f3 th\u1ec3 thay \u0111\u1ed5i khi ch\u01b0\u01a1ng tr\u00ecnh ho\u1ea1t \u0111\u1ed9ng. Python kh\u00f4ng c\u00f3 l\u1ec7nh khai b\u00e1o bi\u1ebfn, bi\u1ebfn \u0111\u01b0\u1ee3c t\u1ea1o ra khi g\u00e1n gi\u00e1 tr\u1ecb cho n\u00f3. T\u00ean bi\u1ebfn \u0111\u1eb7t theo quy t\u1eafc sau: T\u00ean bi\u1ebfn ch\u1ec9 g\u1ed3m c\u00e1c k\u00fd t\u1ef1 ch\u1eef c\u00e1i, ch\u1eef s\u1ed1 v\u00e0 d\u1ea5u g\u1ea1ch d\u01b0\u1edbi '_'. T\u00ean bi\u1ebfn ph\u1ea3i b\u1eaft \u0111\u1ea7u b\u1eb1ng ch\u1eef c\u00e1i ho\u1eb7c k\u00fd t\u1ef1 g\u1ea1ch d\u01b0\u1edbi. Kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u1eb7t t\u00ean bi\u1ebfn tr\u00f9ng v\u1edbi t\u1eeb kh\u00f3a c\u1ee7a Python . V\u00ed d\u1ee5: T\u00ean bi\u1ebfn h\u1ee3p l\u1ec7: delta , x1 , don_gia , _123abc T\u00ean bi\u1ebfn kh\u00f4ng h\u1ee3p l\u1ec7: 3VanChinNghin : b\u1eaft \u0111\u1ea7u b\u1eb1ng ch\u1eef s\u1ed1 Don Gia : ch\u1ee9a kho\u1ea3ng tr\u1eafng except : tr\u00f9ng v\u1edbi t\u1eeb kh\u00f3a c\u1ee7a Python Note Ng\u00f4n ng\u1eef Python ph\u00e2n bi\u1ec7t ch\u1eef hoa ch\u1eef th\u01b0\u1eddng (case-sensitive), n\u00ean c\u00e1c t\u00ean sau l\u00e0 kh\u00e1c nhau: TinHoc , Tinhoc , tinHoc . N\u00ean \u0111\u1eb7t t\u00ean bi\u1ebfn ng\u1eafn g\u1ecdn, c\u00f3 ngh\u0129a (di\u1ec5n t\u1ea3 n\u1ed9i dung n\u00f3 ch\u1ee9a). V\u00ed d\u1ee5, \u0111\u1ec3 vi\u1ebft l\u1ec7nh t\u00ednh qu\u00e3ng \u0111\u01b0\u1eddng \u0111i d\u1ef1a v\u00e0o v\u1eadn t\u1ed1c v\u00e0 th\u1eddi gian, thay v\u00ec vi\u1ebft d = v*t , n\u00ean vi\u1ebft distance = velocity * traveled_time ho\u1eb7c quang_duong = van_toc * thoi_gian , s\u1ebd gi\u00fap c\u00e2u l\u1ec7nh d\u1ec5 hi\u1ec3u h\u01a1n. V\u1edbi Python 3, c\u00f3 th\u1ec3 \u0111\u1eb7t t\u00ean bi\u1ebfn b\u1eb1ng k\u00fd t\u1ef1 Unicode (g\u1ed3m c\u1ea3 ti\u1ebfng Vi\u1ec7t), ch\u1eb3ng h\u1ea1n: Ba_V\u1ea1n_Ch\u00edn_Ngh\u00ecn = 39000 l\u00e0 m\u1ed9t khai b\u00e1o h\u1ee3p l\u1ec7. Tuy nhi\u00ean, ch\u1ec9 n\u00ean \u0111\u1eb7t t\u00ean bi\u1ebfn b\u1eb1ng c\u00e1c k\u00fd t\u1ef1 ASCII. Ki\u1ec3u d\u1eef li\u1ec7u \u00b6 Ki\u1ec3u d\u1eef li\u1ec7u c\u1ee7a m\u1ed9t bi\u1ebfn \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh khi g\u00e1n gi\u00e1 tr\u1ecb cho n\u00f3. Python c\u00f3 c\u00e1c ki\u1ec3u d\u1eef li\u1ec7u c\u01a1 s\u1edf sau: Ki\u1ec3u chu\u1ed7i (text) \u00b6 Chu\u1ed7i l\u00e0 d\u00e3y k\u00fd t\u1ef1 \u0111\u1eb7t trong c\u1eb7p d\u1ea5u nh\u00e1y k\u00e9p \"\" ho\u1eb7c nh\u00e1y \u0111\u01a1n ''. V\u00ed d\u1ee5: # D\u1ea1ng chu\u1ed7i 1: \u0111\u1eb7t gi\u1eefa c\u1eb7p d\u1ea5u nh\u00e1y k\u00e9p ntu_slogan1 = \"L\u1ef1a ch\u1ecdn \u0111\u00fang \u0111\u1ec3 th\u00e0nh c\u00f4ng!\" print(ntu_slogan1) # D\u1ea1ng chu\u1ed7i 2: \u0111\u1eb7t gi\u1eefa c\u1eb7p d\u1ea5u nh\u00e1y \u0111\u01a1n ntu_slogan2 = 'C\u0103ng bu\u1ed3m tri th\u1ee9c v\u01b0\u01a1n kh\u01a1i.' print(ntu_slogan2) # D\u1ea1ng chu\u1ed7i 3: chu\u1ed7i g\u1ed3m nhi\u1ec1u d\u00f2ng verses = \"\"\" 'Tr\u1ea3i qua m\u1ed9t cu\u1ed9c b\u1ec3 d\u00e2u Nh\u1eefng \u0111i\u1ec1u tr\u00f4ng th\u1ea5y m\u00e0 \u0111au \u0111\u1edbn l\u00f2ng.' \\t\\t- tr\u00edch Truy\u1ec7n Ki\u1ec1u (Nguy\u1ec5n Du) \"\"\" print(verses) Ki\u1ec3u s\u1ed1 (numeric) \u00b6 Python c\u00f3 c\u00e1c ki\u1ec3u s\u1ed1 nguy\u00ean (int), s\u1ed1 th\u1ef1c (float) v\u00e0 s\u1ed1 ph\u1ee9c (complex). V\u00ed d\u1ee5: # Ki\u1ec3u s\u1ed1 nguy\u00ean n = 3721 print(\"n = %d\" % n) # Ki\u1ec3u s\u1ed1 th\u1ef1c pi = 3.14159 print(\"PI = %.2f\" % pi) # S\u1ed1 ph\u1ee9c z = 3 + 5j print(\"z = \", z) Ki\u1ec3u tu\u1ea7n t\u1ef1 (sequence) \u00b6 Ki\u1ec3u danh s\u00e1ch (sequence): list, tuple, range Ki\u1ec3u t\u1eeb \u0111i\u1ec3n (mapping): dict Ki\u1ec3u t\u1eadp h\u1ee3p (set): set, frozenset Ki\u1ec3u Boolean: bool \u00b6 Ki\u1ec3u bool c\u00f3 gi\u00e1 tr\u1ecb True ho\u1eb7c False . V\u00ed d\u1ee5: fruits = {'b\u01b0\u1edfi', 't\u00e1o', '\u0111u \u0111\u1ee7', 'cam'} is_apple_in_fruits = 't\u00e1o' in fruits print(is_apple_in_fruits) is_durian_in_fruits = 'durian' in fruits print(is_durian_in_fruits) Ki\u1ec3u None (NoneType) \u00b6 Ki\u1ec3u d\u1eef li\u1ec7u None d\u00f9ng \u0111\u1ec3 ch\u1ec9 m\u1ed9t bi\u1ebfn ho\u1eb7c \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00f4ng c\u00f3 gi\u00e1 tr\u1ecb. Note D\u00f9ng h\u00e0m type() \u0111\u1ec3 l\u1ea5y ki\u1ec3u d\u1eef li\u1ec7u c\u1ee7a m\u1ed9t bi\u1ebfn ho\u1eb7c bi\u1ec3u th\u1ee9c. V\u00ed d\u1ee5: n = 3721 print(\"Ki\u1ec3u d\u1eef li\u1ec7u l\u00e0 \", type(n).__name__) PI = 3.1416 print(\"Ki\u1ec3u d\u1eef li\u1ec7u l\u00e0 \", type(PI).__name__) four_seasons = ['Xu\u00e2n', 'H\u1ea1', 'Thu', '\u0110\u00f4ng'] print(\"Ki\u1ec3u d\u1eef li\u1ec7u l\u00e0 \", type(four_seasons).__name__) fruits = {\"b\u01b0\u1edfi\", \"t\u00e1o\", \"cam\", \"chanh\"} print(\"Ki\u1ec3u d\u1eef li\u1ec7u l\u00e0 \", type(fruits).__name__) student_info = {'ID':'65131234', 'grades':{'python':8.5, 'maths':7.8}} print(\"Ki\u1ec3u d\u1eef li\u1ec7u l\u00e0 \", type(student_info).__name__) numbers = (3,7,2,1) print(\"Ki\u1ec3u d\u1eef li\u1ec7u l\u00e0 \", type(numbers).__name__) greeting_message = 'Welcome to Nha Trang!' print(\"Ki\u1ec3u d\u1eef li\u1ec7u l\u00e0 \", type(greeting_message).__name__) C\u00e1c c\u00e2u l\u1ec7nh \u0111i\u1ec1u khi\u1ec3n \u00b6 L\u1ec7nh r\u1ebd nh\u00e1nh if \u00b6 D\u1ea1ng 1: L\u1ec7nh if thi\u1ebfu \u00b6 N\u1ebfu <BT logic> c\u00f3 gi\u00e1 tr\u1ecb \u0111\u00fang (True) th\u00ec th\u1ef1c hi\u1ec7n <L\u1ec7nh \u0111\u01a1n> ho\u1eb7c <Kh\u1ed1i l\u1ec7nh> if <BT logic>: <L\u1ec7nh \u0111\u01a1n> ho\u1eb7c if <BT logic>: <Kh\u1ed1i l\u1ec7nh> V\u00ed d\u1ee5: n = 5 if n % 2 != 0: print(f'{n} l\u00e0 s\u1ed1 l\u1ebb.') m = 69 if m > 0: print(f'm = {m}') print(f'{m} l\u00e0 s\u1ed1 d\u01b0\u01a1ng.') D\u1ea1ng 2: L\u1ec7nh if \u0111\u1ee7 \u00b6 N\u1ebfu <BT logic> c\u00f3 gi\u00e1 tr\u1ecb \u0111\u00fang (True) th\u00ec th\u1ef1c hi\u1ec7n <Kh\u1ed1i l\u1ec7nh 1> , ng\u01b0\u1ee3c l\u1ea1i th\u1ef1c hi\u1ec7n <Kh\u1ed1i l\u1ec7nh 2> if <BT logic>: <Kh\u1ed1i l\u1ec7nh 1> else: <Kh\u1ed1i l\u1ec7nh 2> Ho\u1eb7c vi\u1ebft g\u1ecdn h\u01a1n khi ch\u1ec9 c\u00f3 l\u1ec7nh \u0111\u01a1n: <L\u1ec7nh 1> if <BT logic> else <L\u1ec7nh 2> V\u00ed d\u1ee5: n = 5 if n % 2 != 0: print(f'{n} l\u00e0 s\u1ed1 l\u1ebb.') else: print(f'{n} l\u00e0 s\u1ed1 ch\u1eb5n.') a, b = 6, 9 print(f'{a} > {b}') if a > b else print(f'{b} > {a}') elif \u00b6 Trong l\u1ec7nh if, mu\u1ed1n ki\u1ec3m tra \u0111i\u1ec1u ki\u1ec7n m\u1edbi khi \u0111i\u1ec1u ki\u1ec7n tr\u01b0\u1edbc kh\u00f4ng th\u1ecfa m\u00e3n th\u00ec d\u00f9ng t\u1eeb kh\u00f3a elif if <BT logic 1>: <Kh\u1ed1i l\u1ec7nh 1> elif <BT logic 2>: <Kh\u1ed1i l\u1ec7nh 2> ... elif <BT logic n>: <Kh\u1ed1i l\u1ec7nh n> else: <Kh\u1ed1i l\u1ec7nh n+1> L\u1ec7nh l\u1eb7p \u00b6 L\u1ec7nh l\u1eb7p while \u00b6 L\u1ec7nh l\u1eb7p while l\u1eb7p l\u1ea1i kh\u1ed1i l\u1ec7nh ch\u1eebng n\u00e0o BT \u0111i\u1ec1u ki\u1ec7n c\u00f2n \u0111\u00fang. while <BT \u0111i\u1ec1u ki\u1ec7n>: <Kh\u1ed1i l\u1ec7nh> V\u00ed d\u1ee5: T\u00ednh t\u1ed5ng c\u00e1c ch\u1eef s\u1ed1 c\u1ee7a s\u1ed1 t\u1ef1 nhi\u00ean n: n = 123 sum_digits = 0 while n > 0: sum_digits += n % 10 n = n // 10 print(f'T\u1ed5ng ch\u1eef s\u1ed1 = {sum_digits}') L\u1ec7nh break \u00b6 L\u1ec7nh `break' khi \u0111\u01b0\u1ee3c g\u1ecdi s\u1ebd d\u1eebng v\u00f2ng l\u1eb7p. Trong v\u00ed d\u1ee5 sau, d\u00f9 \u0111i\u1ec1u ki\u1ec7n l\u1eb7p l\u00e0 i < 100 , nh\u01b0ng n\u1ebfu i b\u1eb1ng 5 th\u00ec d\u1eebng v\u00f2ng l\u1eb7p, n\u00ean ch\u01b0\u01a1ng tr\u00ecnh ch\u1ec9 in ra c\u00e1c s\u1ed1 nguy\u00ean li\u00ean ti\u1ebfp t\u1eeb 1 \u0111\u1ebfn 4. i = 1 while i < 100: print(i, end= ' ') i += 1 if i == 5: break L\u1ec7nh continue \u00b6 L\u1ec7nh `continue' khi \u0111\u01b0\u1ee3c g\u1ecdi s\u1ebd chuy\u1ec3n sang v\u00f2ng l\u1eb7p k\u1ebf ti\u1ebfp. Trong v\u00ed d\u1ee5 sau, bi\u1ebfn i kh\u1edfi \u0111\u1ea7u b\u1eb1ng 0, ch\u1eebng n\u00e0o i c\u00f2n th\u1ecfa < 10 th\u00ec t\u0103ng i th\u00eam 1 v\u00e0 in ra gi\u00e1 tr\u1ecb c\u1ee7a i, nh\u01b0ng n\u1ebfu i l\u00e0 s\u1ed1 ch\u1eb5n th\u00ec l\u1ec7nh continue \u0111\u01b0\u1ee3c g\u1ecdi, ch\u01b0\u01a1ng tr\u00ecnh chuy\u1ec3n sang x\u1eed l\u00fd b\u01b0\u1edbc l\u1eb7p ti\u1ebfp theo m\u00e0 b\u1ecf qua l\u1ec7nh print(i, end=' ') . K\u1ebft qu\u1ea3 l\u00e0 ch\u01b0\u01a1ng tr\u00ecnh ch\u1ec9 in ra c\u00e1c s\u1ed1 l\u1ebb t\u1eeb 1 \u0111\u1ebfn 9. i = 0 while i < 10: i += 1 if i % 2 == 0: continue print(i, end= ' ') L\u1ec7nh l\u1eb7p for \u00b6 L\u1ec7nh l\u1eb7p for d\u00f9ng \u0111\u1ec3 duy\u1ec7t t\u1eebng ph\u1ea7n t\u1eed trong m\u1ed9t d\u00e3y (list, tuple, dictionary, set, string). Duy\u1ec7t danh s\u00e1ch \u00b6 C\u00fa ph\u00e1p for <bi\u1ebfn ch\u1ea1y> in <danh s\u00e1ch>: <Kh\u1ed1i l\u1ec7nh> V\u00ed d\u1ee5 T\u1ee9_Linh = ['Long', 'Ly', 'Quy', 'Ph\u01b0\u1ee3ng'] # C\u00e1ch 1: duy\u1ec7t t\u1eebng ph\u1ea7n t\u1eed c\u1ee7a danh s\u00e1ch for tl in T\u1ee9_Linh: print(tl, end=' ') # C\u00e1ch 2: duy\u1ec7t t\u1eebng ph\u1ea7n t\u1eed th\u00f4ng qua v\u1ecb tr\u00ed trong danh s\u00e1ch for i in range(len(T\u1ee9_Linh)): print(T\u1ee9_Linh[i], end=' ') Duy\u1ec7t chu\u1ed7i k\u00fd t\u1ef1 \u00b6 Chu\u1ed7i l\u00e0 m\u1ed9t d\u00e3y k\u00fd t\u1ef1 v\u00ec th\u1ebf c\u00f3 th\u1ec3 duy\u1ec7t t\u1eebng k\u00fd t\u1ef1 c\u1ee7a chu\u1ed7i b\u1eb1ng l\u1ec7nh for. C\u00fa ph\u00e1p for ch in <chu\u1ed7i>: <L\u1ec7nh> V\u00ed d\u1ee5 st = 'Nha Trang Kh\u00e1nh H\u00f2a' for ch in st: print(ch) H\u00e0m range() \u00b6 h\u00e0m range(<start_value>, <end_value>, <step>) th\u01b0\u1eddng \u0111\u01b0\u1ee3c k\u1ebft h\u1ee3p khi mu\u1ed1n th\u1ef1c hi\u1ec7n l\u1ec7nh l\u1eb7p v\u1edbi s\u1ed1 b\u01b0\u1edbc l\u1eb7p x\u00e1c \u0111\u1ecbnh. V\u00ed d\u1ee5: In 10 d\u00f2ng 'Hello world' for i in range(10): # range(0, 10, 1) print('Hello world') L\u1ec7nh l\u1eb7p l\u1ed3ng nhau (nested loop) \u00b6 L\u1ec7nh l\u1eb7p l\u1ed3ng nhau: Trong m\u1ed9t l\u1ec7nh l\u1eb7p ch\u1ee9a l\u1ec7nh l\u1eb7p kh\u00e1c. V\u1edbi m\u1ed7i b\u01b0\u1edbc l\u1eb7p c\u1ee7a v\u00f2ng l\u1eb7p ngo\u00e0i, l\u1ec7nh l\u1eb7p b\u00ean trong s\u1ebd th\u1ef1c hi\u1ec7n h\u1ebft m\u1ed9t l\u01b0\u1ee3t. V\u00ed d\u1ee5: In b\u1ea3ng c\u1eedu ch\u01b0\u01a1ng for i in range(2, 10): for j in range(1, 11): print('%3d x %3d = %3d' % (i, j, i*j)) H\u00e0m Python \u00b6 H\u00e0m l\u00e0 m\u1ed9t \u0111o\u1ea1n m\u00e3 l\u1ec7nh \u0111\u01b0\u1ee3c l\u1eadp tr\u00ecnh \u0111\u1ec3 th\u1ef1c hi\u1ec7n m\u1ed9t ch\u1ee9c n\u0103ng chuy\u00ean bi\u1ec7t. M\u1ed9t h\u00e0m c\u00f3 t\u00ean g\u1ecdi, \u0111\u1ea7u v\u00e0o v\u00e0 \u0111\u1ea7u ra. H\u00e0m ch\u1ec9 th\u1ef1c thi khi n\u00f3 \u0111\u01b0\u1ee3c g\u1ecdi. M\u1ed9t h\u00e0m c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c g\u1ecdi nhi\u1ec1u l\u1ea7n v\u1edbi c\u00e1c gi\u00e1 tr\u1ecb kh\u00e1c nhau c\u1ee7a \u0111\u1ed1i s\u1ed1. V\u00ed d\u1ee5: def say_hi(): \"\"\" In ra c\u00e2u ch\u00e0o \"Hi there!\" \"\"\" print(\"Hi there!\") # G\u1ecdi h\u00e0m say_hi() H\u00e0m say_hi() \u1edf tr\u00ean kh\u00f4ng c\u00f3 \u0111\u1ea7u v\u00e0o, kh\u00f4ng tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb cho l\u1eddi g\u1ecdi h\u00e0m; khi g\u1ecdi h\u00e0m, m\u00e1y t\u00ednh s\u1ebd th\u1ef1c thi c\u00e1c l\u1ec7nh trong th\u00e2n h\u00e0m, \u1edf \u0111\u00e2y l\u00e0 l\u1ec7nh print(\"Hi there!\") . Truy\u1ec1n \u0111\u1ed1i s\u1ed1 cho h\u00e0m \u00b6 H\u00e0m c\u00f3 th\u1ec3 nh\u1eadn c\u00e1c gi\u00e1 tr\u1ecb \u0111\u1ea7u v\u00e0o \u0111\u1ec3 x\u1eed l\u00fd, g\u1ecdi l\u00e0 tham s\u1ed1. C\u00e1c tham s\u1ed1 c\u00e1ch nhau d\u1ea5y ph\u1ea9y. V\u00ed d\u1ee5: S\u1eeda l\u1ea1i h\u00e0m say_hi() \u1edf tr\u00ean \u0111\u1ec3 khi g\u1ecdi h\u00e0m v\u00e0 truy\u1ec1n cho n\u00f3 m\u1ed9t chu\u1ed7i ch\u1ee9a t\u00ean b\u1ea5t k\u1ef3 th\u00ec m\u00e1y t\u00ednh s\u1ebd in ra c\u00e2u ch\u00e0o t\u00ean \u0111\u00f3. def say_hi(name): \"\"\" H\u00e0m in ra c\u00e2u ch\u00e0o t\u00ean trong chu\u1ed7i \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o \"\"\" print(\"Hello %s\" % name.title()) # G\u1ecdi h\u00e0m v\u1edbi c\u00e1c \u0111\u1ed1i s\u1ed1 kh\u00e1c nhau say_hi(\"Nh\u00e2m Th\u00ecn\") say_hi(\"Cristiano Ronaldo\") st = \"Vi\u1ec7t Nam\" say_hi(st) M\u1ed9t s\u1ed1 h\u00e0m d\u1ef1ng s\u1eb5n c\u1ee7a Python \u00b6 Tr\u00ecnh th\u00f4ng d\u1ecbch Python cung c\u1ea5p nhi\u1ec1u h\u00e0m d\u1ef1ng s\u1eb5n (built-in functions) . Sau \u0111\u00e2y l\u00e0 m\u1ed9t s\u1ed1 h\u00e0m th\u00f4ng d\u1ee5ng. Nh\u00f3m h\u00e0m to\u00e1n h\u1ecdc \u00b6 T\u00ean h\u00e0m M\u00f4 t\u1ea3 abs() T\u00ednh gi\u00e1 tr\u1ecb tuy\u1ec7t \u0111\u1ed1i c\u1ee7a m\u1ed9t s\u1ed1 max() T\u00ecm s\u1ed1 l\u1edbn nh\u1ea5t trong c\u00e1c \u0111\u1ed1i s\u1ed1 ho\u1eb7c trong danh s\u00e1ch min() T\u00ecm s\u1ed1 nh\u1ecf nh\u1ea5t trong c\u00e1c \u0111\u1ed1i s\u1ed1 ho\u1eb7c trong danh s\u00e1ch pow() T\u00ednh l\u0169y th\u1eeba round() L\u00e0m tr\u00f2n s\u1ed1 th\u1eadp ph\u00e2n sum() T\u00ednh t\u1ed5ng c\u00e1c gi\u00e1 tr\u1ecb trong danh s\u00e1ch Nh\u00f3m h\u00e0m x\u1eed l\u00fd v\u1edbi ki\u1ec3u d\u1eef li\u1ec7u c\u01a1 s\u1edf \u00b6 H\u00e0m M\u00f4 t\u1ea3 int() \u0110\u1ed5i m\u1ed9t chu\u1ed7i ho\u1eb7c s\u1ed1 sang s\u1ed1 nguy\u00ean bin() \u0110\u1ed5i s\u1ed1 nguy\u00ean sang h\u1ec7 nh\u1ecb ph\u00e2n hex() \u0110\u1ed5i s\u1ed1 nguy\u00ean sang h\u1ec7 hexa float() \u0110\u1ed1i chu\u1ed7i ho\u1eb7c s\u1ed1 sang s\u1ed1 th\u1ef1c str() Chuy\u1ec3n \u0111\u1ed1i t\u01b0\u1ee3ng th\u00e0nh ki\u1ec3u chu\u1ed7i ord() Tr\u1ea3 v\u1ec1 m\u00e3 Unicode c\u1ee7a k\u00fd t\u1ef1 chr() Tr\u1ea3 v\u1ec1 k\u00fd t\u1ef1 \u1ee9ng v\u1edbi m\u00e3 Unicode dict(), set(), list(), tuple() \u00b6 Tr\u1ea3 v\u1ec1 ki\u1ec3u t\u1eeb \u0111i\u1ec3n, t\u1eadp h\u1ee3p, danh s\u00e1ch |","title":"Python c\u01a1 b\u1ea3n"},{"location":"topics/python-basic/#python-co-ban","text":"Python Basics","title":"Python c\u01a1 b\u1ea3n"},{"location":"topics/python-basic/#hello-world","text":"# Ch\u01b0\u01a1ng tr\u00ecnh \u0111\u1ea7u ti\u00ean: In ra m\u00e0n h\u00ecnh c\u00e2u \"Hello, World!\" print(\"Hello, World!\")","title":"Hello, World"},{"location":"topics/python-basic/#thuc-thi-chuong-trinh-python","text":"","title":"Th\u1ef1c thi ch\u01b0\u01a1ng tr\u00ecnh Python"},{"location":"topics/python-basic/#chay-tung-dong-lenh","text":"C\u00e1c b\u01b0\u1edbc th\u1ef1c hi\u1ec7n: M\u1edf c\u1eeda s\u1ed5 ch\u1ebf \u0111\u1ed9 d\u00f2ng l\u1ec7nh (terminal). Nh\u1eadp python (ho\u1eb7c python3 ) v\u00e0 nh\u1ea5n Enter \u0111\u1ec3 m\u1edf Python ch\u1ebf \u0111\u1ed9 t\u01b0\u01a1ng t\u00e1c. Nh\u1eadp t\u1eebng d\u00f2ng l\u1ec7nh \u0111\u1ec3 th\u1ef1c thi. V\u00ed d\u1ee5:","title":"Ch\u1ea1y t\u1eebng d\u00f2ng l\u1ec7nh"},{"location":"topics/python-basic/#chay-file-ma-nguon-tu-che-o-dong-lenh","text":"M\u1edf c\u1eeda s\u1ed5 d\u00f2ng l\u1ec7nh (terminal). Nh\u1eadp python <[path_to/]python_script_file_name.py> v\u00e0 nh\u1ea5n Enter \u0111\u1ec3 th\u1ef1c thi. Tr\u00ecnh th\u00f4ng d\u1ecbch s\u1ebd l\u1ea7n l\u01b0\u1ee3t th\u1ef1c hi\u1ec7n c\u00e1c l\u1ec7nh trong file m\u00e3 ngu\u1ed3n.","title":"Ch\u1ea1y file m\u00e3 ngu\u1ed3n t\u1eeb ch\u1ebf \u0111\u1ed9 d\u00f2ng l\u1ec7nh"},{"location":"topics/python-basic/#thuc-thi-chuong-trinh-python-tu-moi-truong-phat-trien-tich-hop-ide","text":"M\u1edf IDE l\u1eadp tr\u00ecnh Python \u01b0a th\u00edch (PyCharm, VS Code, Spyder, IDLE,...). T\u1ea1o (ho\u1eb7c m\u1edf) file ch\u01b0\u01a1ng tr\u00ecnh Python. Nh\u1ea5n l\u1ec7nh Run \u0111\u1ec3 th\u1ef1c thi ch\u01b0\u01a1ng tr\u00ecnh.","title":"Th\u1ef1c thi ch\u01b0\u01a1ng tr\u00ecnh Python t\u1eeb m\u00f4i tr\u01b0\u1eddng ph\u00e1t tri\u1ec3n t\u00edch h\u1ee3p (IDE)"},{"location":"topics/python-basic/#khoi-lenh","text":"Python s\u1eed d\u1ee5ng kho\u1ea3ng canh l\u1ec1 (indentation) \u0111\u1ec3 gi\u1edbi h\u1ea1n kh\u1ed1i l\u1ec7nh. S\u1ed1 kho\u1ea3ng tr\u1eafng tr\u01b0\u1edbc kh\u1ed1i l\u1ec7nh \u00edt nh\u1ea5t l\u00e0 1, th\u00f4ng d\u1ee5ng nh\u1ea5t l\u00e0 4. Trong m\u1ed9t kh\u1ed1i l\u1ec7nh, s\u1ed1 kho\u1ea3ng tr\u1eafng \u0111\u1ee9ng tr\u01b0\u1edbc m\u1ed7i d\u00f2ng l\u1ec7nh ph\u1ea3i b\u1eb1ng nhau. V\u00ed d\u1ee5: n = 123 if n % 2 == 0: print(\"%d l\u00e0 s\u1ed1 ch\u1eb5n\" % n) else: print(\"%d l\u00e0 s\u1ed1 l\u1ebb\" % n)","title":"Kh\u1ed1i l\u1ec7nh"},{"location":"topics/python-basic/#kieu-du-lieu-va-bien","text":"","title":"Ki\u1ec3u d\u1eef li\u1ec7u v\u00e0 bi\u1ebfn"},{"location":"topics/python-basic/#bien","text":"Bi\u1ebfn l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng d\u00f9ng \u0111\u1ec3 l\u01b0u d\u1eef li\u1ec7u. Gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn c\u00f3 th\u1ec3 thay \u0111\u1ed5i khi ch\u01b0\u01a1ng tr\u00ecnh ho\u1ea1t \u0111\u1ed9ng. Python kh\u00f4ng c\u00f3 l\u1ec7nh khai b\u00e1o bi\u1ebfn, bi\u1ebfn \u0111\u01b0\u1ee3c t\u1ea1o ra khi g\u00e1n gi\u00e1 tr\u1ecb cho n\u00f3. T\u00ean bi\u1ebfn \u0111\u1eb7t theo quy t\u1eafc sau: T\u00ean bi\u1ebfn ch\u1ec9 g\u1ed3m c\u00e1c k\u00fd t\u1ef1 ch\u1eef c\u00e1i, ch\u1eef s\u1ed1 v\u00e0 d\u1ea5u g\u1ea1ch d\u01b0\u1edbi '_'. T\u00ean bi\u1ebfn ph\u1ea3i b\u1eaft \u0111\u1ea7u b\u1eb1ng ch\u1eef c\u00e1i ho\u1eb7c k\u00fd t\u1ef1 g\u1ea1ch d\u01b0\u1edbi. Kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u1eb7t t\u00ean bi\u1ebfn tr\u00f9ng v\u1edbi t\u1eeb kh\u00f3a c\u1ee7a Python . V\u00ed d\u1ee5: T\u00ean bi\u1ebfn h\u1ee3p l\u1ec7: delta , x1 , don_gia , _123abc T\u00ean bi\u1ebfn kh\u00f4ng h\u1ee3p l\u1ec7: 3VanChinNghin : b\u1eaft \u0111\u1ea7u b\u1eb1ng ch\u1eef s\u1ed1 Don Gia : ch\u1ee9a kho\u1ea3ng tr\u1eafng except : tr\u00f9ng v\u1edbi t\u1eeb kh\u00f3a c\u1ee7a Python Note Ng\u00f4n ng\u1eef Python ph\u00e2n bi\u1ec7t ch\u1eef hoa ch\u1eef th\u01b0\u1eddng (case-sensitive), n\u00ean c\u00e1c t\u00ean sau l\u00e0 kh\u00e1c nhau: TinHoc , Tinhoc , tinHoc . N\u00ean \u0111\u1eb7t t\u00ean bi\u1ebfn ng\u1eafn g\u1ecdn, c\u00f3 ngh\u0129a (di\u1ec5n t\u1ea3 n\u1ed9i dung n\u00f3 ch\u1ee9a). V\u00ed d\u1ee5, \u0111\u1ec3 vi\u1ebft l\u1ec7nh t\u00ednh qu\u00e3ng \u0111\u01b0\u1eddng \u0111i d\u1ef1a v\u00e0o v\u1eadn t\u1ed1c v\u00e0 th\u1eddi gian, thay v\u00ec vi\u1ebft d = v*t , n\u00ean vi\u1ebft distance = velocity * traveled_time ho\u1eb7c quang_duong = van_toc * thoi_gian , s\u1ebd gi\u00fap c\u00e2u l\u1ec7nh d\u1ec5 hi\u1ec3u h\u01a1n. V\u1edbi Python 3, c\u00f3 th\u1ec3 \u0111\u1eb7t t\u00ean bi\u1ebfn b\u1eb1ng k\u00fd t\u1ef1 Unicode (g\u1ed3m c\u1ea3 ti\u1ebfng Vi\u1ec7t), ch\u1eb3ng h\u1ea1n: Ba_V\u1ea1n_Ch\u00edn_Ngh\u00ecn = 39000 l\u00e0 m\u1ed9t khai b\u00e1o h\u1ee3p l\u1ec7. Tuy nhi\u00ean, ch\u1ec9 n\u00ean \u0111\u1eb7t t\u00ean bi\u1ebfn b\u1eb1ng c\u00e1c k\u00fd t\u1ef1 ASCII.","title":"Bi\u1ebfn"},{"location":"topics/python-basic/#kieu-du-lieu","text":"Ki\u1ec3u d\u1eef li\u1ec7u c\u1ee7a m\u1ed9t bi\u1ebfn \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh khi g\u00e1n gi\u00e1 tr\u1ecb cho n\u00f3. Python c\u00f3 c\u00e1c ki\u1ec3u d\u1eef li\u1ec7u c\u01a1 s\u1edf sau:","title":"Ki\u1ec3u d\u1eef li\u1ec7u"},{"location":"topics/python-basic/#kieu-chuoi-text","text":"Chu\u1ed7i l\u00e0 d\u00e3y k\u00fd t\u1ef1 \u0111\u1eb7t trong c\u1eb7p d\u1ea5u nh\u00e1y k\u00e9p \"\" ho\u1eb7c nh\u00e1y \u0111\u01a1n ''. V\u00ed d\u1ee5: # D\u1ea1ng chu\u1ed7i 1: \u0111\u1eb7t gi\u1eefa c\u1eb7p d\u1ea5u nh\u00e1y k\u00e9p ntu_slogan1 = \"L\u1ef1a ch\u1ecdn \u0111\u00fang \u0111\u1ec3 th\u00e0nh c\u00f4ng!\" print(ntu_slogan1) # D\u1ea1ng chu\u1ed7i 2: \u0111\u1eb7t gi\u1eefa c\u1eb7p d\u1ea5u nh\u00e1y \u0111\u01a1n ntu_slogan2 = 'C\u0103ng bu\u1ed3m tri th\u1ee9c v\u01b0\u01a1n kh\u01a1i.' print(ntu_slogan2) # D\u1ea1ng chu\u1ed7i 3: chu\u1ed7i g\u1ed3m nhi\u1ec1u d\u00f2ng verses = \"\"\" 'Tr\u1ea3i qua m\u1ed9t cu\u1ed9c b\u1ec3 d\u00e2u Nh\u1eefng \u0111i\u1ec1u tr\u00f4ng th\u1ea5y m\u00e0 \u0111au \u0111\u1edbn l\u00f2ng.' \\t\\t- tr\u00edch Truy\u1ec7n Ki\u1ec1u (Nguy\u1ec5n Du) \"\"\" print(verses)","title":"Ki\u1ec3u chu\u1ed7i (text)"},{"location":"topics/python-basic/#kieu-so-numeric","text":"Python c\u00f3 c\u00e1c ki\u1ec3u s\u1ed1 nguy\u00ean (int), s\u1ed1 th\u1ef1c (float) v\u00e0 s\u1ed1 ph\u1ee9c (complex). V\u00ed d\u1ee5: # Ki\u1ec3u s\u1ed1 nguy\u00ean n = 3721 print(\"n = %d\" % n) # Ki\u1ec3u s\u1ed1 th\u1ef1c pi = 3.14159 print(\"PI = %.2f\" % pi) # S\u1ed1 ph\u1ee9c z = 3 + 5j print(\"z = \", z)","title":"Ki\u1ec3u s\u1ed1 (numeric)"},{"location":"topics/python-basic/#kieu-tuan-tu-sequence","text":"Ki\u1ec3u danh s\u00e1ch (sequence): list, tuple, range Ki\u1ec3u t\u1eeb \u0111i\u1ec3n (mapping): dict Ki\u1ec3u t\u1eadp h\u1ee3p (set): set, frozenset","title":"Ki\u1ec3u tu\u1ea7n t\u1ef1 (sequence)"},{"location":"topics/python-basic/#kieu-boolean-bool","text":"Ki\u1ec3u bool c\u00f3 gi\u00e1 tr\u1ecb True ho\u1eb7c False . V\u00ed d\u1ee5: fruits = {'b\u01b0\u1edfi', 't\u00e1o', '\u0111u \u0111\u1ee7', 'cam'} is_apple_in_fruits = 't\u00e1o' in fruits print(is_apple_in_fruits) is_durian_in_fruits = 'durian' in fruits print(is_durian_in_fruits)","title":"Ki\u1ec3u Boolean: bool"},{"location":"topics/python-basic/#kieu-none-nonetype","text":"Ki\u1ec3u d\u1eef li\u1ec7u None d\u00f9ng \u0111\u1ec3 ch\u1ec9 m\u1ed9t bi\u1ebfn ho\u1eb7c \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00f4ng c\u00f3 gi\u00e1 tr\u1ecb. Note D\u00f9ng h\u00e0m type() \u0111\u1ec3 l\u1ea5y ki\u1ec3u d\u1eef li\u1ec7u c\u1ee7a m\u1ed9t bi\u1ebfn ho\u1eb7c bi\u1ec3u th\u1ee9c. V\u00ed d\u1ee5: n = 3721 print(\"Ki\u1ec3u d\u1eef li\u1ec7u l\u00e0 \", type(n).__name__) PI = 3.1416 print(\"Ki\u1ec3u d\u1eef li\u1ec7u l\u00e0 \", type(PI).__name__) four_seasons = ['Xu\u00e2n', 'H\u1ea1', 'Thu', '\u0110\u00f4ng'] print(\"Ki\u1ec3u d\u1eef li\u1ec7u l\u00e0 \", type(four_seasons).__name__) fruits = {\"b\u01b0\u1edfi\", \"t\u00e1o\", \"cam\", \"chanh\"} print(\"Ki\u1ec3u d\u1eef li\u1ec7u l\u00e0 \", type(fruits).__name__) student_info = {'ID':'65131234', 'grades':{'python':8.5, 'maths':7.8}} print(\"Ki\u1ec3u d\u1eef li\u1ec7u l\u00e0 \", type(student_info).__name__) numbers = (3,7,2,1) print(\"Ki\u1ec3u d\u1eef li\u1ec7u l\u00e0 \", type(numbers).__name__) greeting_message = 'Welcome to Nha Trang!' print(\"Ki\u1ec3u d\u1eef li\u1ec7u l\u00e0 \", type(greeting_message).__name__)","title":"Ki\u1ec3u None (NoneType)"},{"location":"topics/python-basic/#cac-cau-lenh-ieu-khien","text":"","title":"C\u00e1c c\u00e2u l\u1ec7nh \u0111i\u1ec1u khi\u1ec3n"},{"location":"topics/python-basic/#lenh-re-nhanh-if","text":"","title":"L\u1ec7nh r\u1ebd nh\u00e1nh if"},{"location":"topics/python-basic/#dang-1-lenh-if-thieu","text":"N\u1ebfu <BT logic> c\u00f3 gi\u00e1 tr\u1ecb \u0111\u00fang (True) th\u00ec th\u1ef1c hi\u1ec7n <L\u1ec7nh \u0111\u01a1n> ho\u1eb7c <Kh\u1ed1i l\u1ec7nh> if <BT logic>: <L\u1ec7nh \u0111\u01a1n> ho\u1eb7c if <BT logic>: <Kh\u1ed1i l\u1ec7nh> V\u00ed d\u1ee5: n = 5 if n % 2 != 0: print(f'{n} l\u00e0 s\u1ed1 l\u1ebb.') m = 69 if m > 0: print(f'm = {m}') print(f'{m} l\u00e0 s\u1ed1 d\u01b0\u01a1ng.')","title":"D\u1ea1ng 1: L\u1ec7nh if thi\u1ebfu"},{"location":"topics/python-basic/#dang-2-lenh-if-u","text":"N\u1ebfu <BT logic> c\u00f3 gi\u00e1 tr\u1ecb \u0111\u00fang (True) th\u00ec th\u1ef1c hi\u1ec7n <Kh\u1ed1i l\u1ec7nh 1> , ng\u01b0\u1ee3c l\u1ea1i th\u1ef1c hi\u1ec7n <Kh\u1ed1i l\u1ec7nh 2> if <BT logic>: <Kh\u1ed1i l\u1ec7nh 1> else: <Kh\u1ed1i l\u1ec7nh 2> Ho\u1eb7c vi\u1ebft g\u1ecdn h\u01a1n khi ch\u1ec9 c\u00f3 l\u1ec7nh \u0111\u01a1n: <L\u1ec7nh 1> if <BT logic> else <L\u1ec7nh 2> V\u00ed d\u1ee5: n = 5 if n % 2 != 0: print(f'{n} l\u00e0 s\u1ed1 l\u1ebb.') else: print(f'{n} l\u00e0 s\u1ed1 ch\u1eb5n.') a, b = 6, 9 print(f'{a} > {b}') if a > b else print(f'{b} > {a}')","title":"D\u1ea1ng 2: L\u1ec7nh if \u0111\u1ee7"},{"location":"topics/python-basic/#elif","text":"Trong l\u1ec7nh if, mu\u1ed1n ki\u1ec3m tra \u0111i\u1ec1u ki\u1ec7n m\u1edbi khi \u0111i\u1ec1u ki\u1ec7n tr\u01b0\u1edbc kh\u00f4ng th\u1ecfa m\u00e3n th\u00ec d\u00f9ng t\u1eeb kh\u00f3a elif if <BT logic 1>: <Kh\u1ed1i l\u1ec7nh 1> elif <BT logic 2>: <Kh\u1ed1i l\u1ec7nh 2> ... elif <BT logic n>: <Kh\u1ed1i l\u1ec7nh n> else: <Kh\u1ed1i l\u1ec7nh n+1>","title":"elif"},{"location":"topics/python-basic/#lenh-lap","text":"","title":"L\u1ec7nh l\u1eb7p"},{"location":"topics/python-basic/#lenh-lap-while","text":"L\u1ec7nh l\u1eb7p while l\u1eb7p l\u1ea1i kh\u1ed1i l\u1ec7nh ch\u1eebng n\u00e0o BT \u0111i\u1ec1u ki\u1ec7n c\u00f2n \u0111\u00fang. while <BT \u0111i\u1ec1u ki\u1ec7n>: <Kh\u1ed1i l\u1ec7nh> V\u00ed d\u1ee5: T\u00ednh t\u1ed5ng c\u00e1c ch\u1eef s\u1ed1 c\u1ee7a s\u1ed1 t\u1ef1 nhi\u00ean n: n = 123 sum_digits = 0 while n > 0: sum_digits += n % 10 n = n // 10 print(f'T\u1ed5ng ch\u1eef s\u1ed1 = {sum_digits}')","title":"L\u1ec7nh l\u1eb7p while"},{"location":"topics/python-basic/#lenh-break","text":"L\u1ec7nh `break' khi \u0111\u01b0\u1ee3c g\u1ecdi s\u1ebd d\u1eebng v\u00f2ng l\u1eb7p. Trong v\u00ed d\u1ee5 sau, d\u00f9 \u0111i\u1ec1u ki\u1ec7n l\u1eb7p l\u00e0 i < 100 , nh\u01b0ng n\u1ebfu i b\u1eb1ng 5 th\u00ec d\u1eebng v\u00f2ng l\u1eb7p, n\u00ean ch\u01b0\u01a1ng tr\u00ecnh ch\u1ec9 in ra c\u00e1c s\u1ed1 nguy\u00ean li\u00ean ti\u1ebfp t\u1eeb 1 \u0111\u1ebfn 4. i = 1 while i < 100: print(i, end= ' ') i += 1 if i == 5: break","title":"L\u1ec7nh break"},{"location":"topics/python-basic/#lenh-continue","text":"L\u1ec7nh `continue' khi \u0111\u01b0\u1ee3c g\u1ecdi s\u1ebd chuy\u1ec3n sang v\u00f2ng l\u1eb7p k\u1ebf ti\u1ebfp. Trong v\u00ed d\u1ee5 sau, bi\u1ebfn i kh\u1edfi \u0111\u1ea7u b\u1eb1ng 0, ch\u1eebng n\u00e0o i c\u00f2n th\u1ecfa < 10 th\u00ec t\u0103ng i th\u00eam 1 v\u00e0 in ra gi\u00e1 tr\u1ecb c\u1ee7a i, nh\u01b0ng n\u1ebfu i l\u00e0 s\u1ed1 ch\u1eb5n th\u00ec l\u1ec7nh continue \u0111\u01b0\u1ee3c g\u1ecdi, ch\u01b0\u01a1ng tr\u00ecnh chuy\u1ec3n sang x\u1eed l\u00fd b\u01b0\u1edbc l\u1eb7p ti\u1ebfp theo m\u00e0 b\u1ecf qua l\u1ec7nh print(i, end=' ') . K\u1ebft qu\u1ea3 l\u00e0 ch\u01b0\u01a1ng tr\u00ecnh ch\u1ec9 in ra c\u00e1c s\u1ed1 l\u1ebb t\u1eeb 1 \u0111\u1ebfn 9. i = 0 while i < 10: i += 1 if i % 2 == 0: continue print(i, end= ' ')","title":"L\u1ec7nh continue"},{"location":"topics/python-basic/#lenh-lap-for","text":"L\u1ec7nh l\u1eb7p for d\u00f9ng \u0111\u1ec3 duy\u1ec7t t\u1eebng ph\u1ea7n t\u1eed trong m\u1ed9t d\u00e3y (list, tuple, dictionary, set, string).","title":"L\u1ec7nh l\u1eb7p for"},{"location":"topics/python-basic/#duyet-danh-sach","text":"C\u00fa ph\u00e1p for <bi\u1ebfn ch\u1ea1y> in <danh s\u00e1ch>: <Kh\u1ed1i l\u1ec7nh> V\u00ed d\u1ee5 T\u1ee9_Linh = ['Long', 'Ly', 'Quy', 'Ph\u01b0\u1ee3ng'] # C\u00e1ch 1: duy\u1ec7t t\u1eebng ph\u1ea7n t\u1eed c\u1ee7a danh s\u00e1ch for tl in T\u1ee9_Linh: print(tl, end=' ') # C\u00e1ch 2: duy\u1ec7t t\u1eebng ph\u1ea7n t\u1eed th\u00f4ng qua v\u1ecb tr\u00ed trong danh s\u00e1ch for i in range(len(T\u1ee9_Linh)): print(T\u1ee9_Linh[i], end=' ')","title":"Duy\u1ec7t danh s\u00e1ch"},{"location":"topics/python-basic/#duyet-chuoi-ky-tu","text":"Chu\u1ed7i l\u00e0 m\u1ed9t d\u00e3y k\u00fd t\u1ef1 v\u00ec th\u1ebf c\u00f3 th\u1ec3 duy\u1ec7t t\u1eebng k\u00fd t\u1ef1 c\u1ee7a chu\u1ed7i b\u1eb1ng l\u1ec7nh for. C\u00fa ph\u00e1p for ch in <chu\u1ed7i>: <L\u1ec7nh> V\u00ed d\u1ee5 st = 'Nha Trang Kh\u00e1nh H\u00f2a' for ch in st: print(ch)","title":"Duy\u1ec7t chu\u1ed7i k\u00fd t\u1ef1"},{"location":"topics/python-basic/#ham-range","text":"h\u00e0m range(<start_value>, <end_value>, <step>) th\u01b0\u1eddng \u0111\u01b0\u1ee3c k\u1ebft h\u1ee3p khi mu\u1ed1n th\u1ef1c hi\u1ec7n l\u1ec7nh l\u1eb7p v\u1edbi s\u1ed1 b\u01b0\u1edbc l\u1eb7p x\u00e1c \u0111\u1ecbnh. V\u00ed d\u1ee5: In 10 d\u00f2ng 'Hello world' for i in range(10): # range(0, 10, 1) print('Hello world')","title":"H\u00e0m range()"},{"location":"topics/python-basic/#lenh-lap-long-nhau-nested-loop","text":"L\u1ec7nh l\u1eb7p l\u1ed3ng nhau: Trong m\u1ed9t l\u1ec7nh l\u1eb7p ch\u1ee9a l\u1ec7nh l\u1eb7p kh\u00e1c. V\u1edbi m\u1ed7i b\u01b0\u1edbc l\u1eb7p c\u1ee7a v\u00f2ng l\u1eb7p ngo\u00e0i, l\u1ec7nh l\u1eb7p b\u00ean trong s\u1ebd th\u1ef1c hi\u1ec7n h\u1ebft m\u1ed9t l\u01b0\u1ee3t. V\u00ed d\u1ee5: In b\u1ea3ng c\u1eedu ch\u01b0\u01a1ng for i in range(2, 10): for j in range(1, 11): print('%3d x %3d = %3d' % (i, j, i*j))","title":"L\u1ec7nh l\u1eb7p l\u1ed3ng nhau (nested loop)"},{"location":"topics/python-basic/#ham-python","text":"H\u00e0m l\u00e0 m\u1ed9t \u0111o\u1ea1n m\u00e3 l\u1ec7nh \u0111\u01b0\u1ee3c l\u1eadp tr\u00ecnh \u0111\u1ec3 th\u1ef1c hi\u1ec7n m\u1ed9t ch\u1ee9c n\u0103ng chuy\u00ean bi\u1ec7t. M\u1ed9t h\u00e0m c\u00f3 t\u00ean g\u1ecdi, \u0111\u1ea7u v\u00e0o v\u00e0 \u0111\u1ea7u ra. H\u00e0m ch\u1ec9 th\u1ef1c thi khi n\u00f3 \u0111\u01b0\u1ee3c g\u1ecdi. M\u1ed9t h\u00e0m c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c g\u1ecdi nhi\u1ec1u l\u1ea7n v\u1edbi c\u00e1c gi\u00e1 tr\u1ecb kh\u00e1c nhau c\u1ee7a \u0111\u1ed1i s\u1ed1. V\u00ed d\u1ee5: def say_hi(): \"\"\" In ra c\u00e2u ch\u00e0o \"Hi there!\" \"\"\" print(\"Hi there!\") # G\u1ecdi h\u00e0m say_hi() H\u00e0m say_hi() \u1edf tr\u00ean kh\u00f4ng c\u00f3 \u0111\u1ea7u v\u00e0o, kh\u00f4ng tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb cho l\u1eddi g\u1ecdi h\u00e0m; khi g\u1ecdi h\u00e0m, m\u00e1y t\u00ednh s\u1ebd th\u1ef1c thi c\u00e1c l\u1ec7nh trong th\u00e2n h\u00e0m, \u1edf \u0111\u00e2y l\u00e0 l\u1ec7nh print(\"Hi there!\") .","title":"H\u00e0m Python"},{"location":"topics/python-basic/#truyen-oi-so-cho-ham","text":"H\u00e0m c\u00f3 th\u1ec3 nh\u1eadn c\u00e1c gi\u00e1 tr\u1ecb \u0111\u1ea7u v\u00e0o \u0111\u1ec3 x\u1eed l\u00fd, g\u1ecdi l\u00e0 tham s\u1ed1. C\u00e1c tham s\u1ed1 c\u00e1ch nhau d\u1ea5y ph\u1ea9y. V\u00ed d\u1ee5: S\u1eeda l\u1ea1i h\u00e0m say_hi() \u1edf tr\u00ean \u0111\u1ec3 khi g\u1ecdi h\u00e0m v\u00e0 truy\u1ec1n cho n\u00f3 m\u1ed9t chu\u1ed7i ch\u1ee9a t\u00ean b\u1ea5t k\u1ef3 th\u00ec m\u00e1y t\u00ednh s\u1ebd in ra c\u00e2u ch\u00e0o t\u00ean \u0111\u00f3. def say_hi(name): \"\"\" H\u00e0m in ra c\u00e2u ch\u00e0o t\u00ean trong chu\u1ed7i \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o \"\"\" print(\"Hello %s\" % name.title()) # G\u1ecdi h\u00e0m v\u1edbi c\u00e1c \u0111\u1ed1i s\u1ed1 kh\u00e1c nhau say_hi(\"Nh\u00e2m Th\u00ecn\") say_hi(\"Cristiano Ronaldo\") st = \"Vi\u1ec7t Nam\" say_hi(st)","title":"Truy\u1ec1n \u0111\u1ed1i s\u1ed1 cho h\u00e0m"},{"location":"topics/python-basic/#mot-so-ham-dung-san-cua-python","text":"Tr\u00ecnh th\u00f4ng d\u1ecbch Python cung c\u1ea5p nhi\u1ec1u h\u00e0m d\u1ef1ng s\u1eb5n (built-in functions) . Sau \u0111\u00e2y l\u00e0 m\u1ed9t s\u1ed1 h\u00e0m th\u00f4ng d\u1ee5ng.","title":"M\u1ed9t s\u1ed1 h\u00e0m d\u1ef1ng s\u1eb5n c\u1ee7a Python"},{"location":"topics/python-basic/#nhom-ham-toan-hoc","text":"T\u00ean h\u00e0m M\u00f4 t\u1ea3 abs() T\u00ednh gi\u00e1 tr\u1ecb tuy\u1ec7t \u0111\u1ed1i c\u1ee7a m\u1ed9t s\u1ed1 max() T\u00ecm s\u1ed1 l\u1edbn nh\u1ea5t trong c\u00e1c \u0111\u1ed1i s\u1ed1 ho\u1eb7c trong danh s\u00e1ch min() T\u00ecm s\u1ed1 nh\u1ecf nh\u1ea5t trong c\u00e1c \u0111\u1ed1i s\u1ed1 ho\u1eb7c trong danh s\u00e1ch pow() T\u00ednh l\u0169y th\u1eeba round() L\u00e0m tr\u00f2n s\u1ed1 th\u1eadp ph\u00e2n sum() T\u00ednh t\u1ed5ng c\u00e1c gi\u00e1 tr\u1ecb trong danh s\u00e1ch","title":"Nh\u00f3m h\u00e0m to\u00e1n h\u1ecdc"},{"location":"topics/python-basic/#nhom-ham-xu-ly-voi-kieu-du-lieu-co-so","text":"H\u00e0m M\u00f4 t\u1ea3 int() \u0110\u1ed5i m\u1ed9t chu\u1ed7i ho\u1eb7c s\u1ed1 sang s\u1ed1 nguy\u00ean bin() \u0110\u1ed5i s\u1ed1 nguy\u00ean sang h\u1ec7 nh\u1ecb ph\u00e2n hex() \u0110\u1ed5i s\u1ed1 nguy\u00ean sang h\u1ec7 hexa float() \u0110\u1ed1i chu\u1ed7i ho\u1eb7c s\u1ed1 sang s\u1ed1 th\u1ef1c str() Chuy\u1ec3n \u0111\u1ed1i t\u01b0\u1ee3ng th\u00e0nh ki\u1ec3u chu\u1ed7i ord() Tr\u1ea3 v\u1ec1 m\u00e3 Unicode c\u1ee7a k\u00fd t\u1ef1 chr() Tr\u1ea3 v\u1ec1 k\u00fd t\u1ef1 \u1ee9ng v\u1edbi m\u00e3 Unicode","title":"Nh\u00f3m h\u00e0m x\u1eed l\u00fd v\u1edbi ki\u1ec3u d\u1eef li\u1ec7u c\u01a1 s\u1edf"},{"location":"topics/python-basic/#dict-set-list-tuple","text":"Tr\u1ea3 v\u1ec1 ki\u1ec3u t\u1eeb \u0111i\u1ec3n, t\u1eadp h\u1ee3p, danh s\u00e1ch |","title":"dict(), set(), list(), tuple()"},{"location":"topics/python-basic/README-Hung-Desktop/","text":"Python c\u01a1 b\u1ea3n \u00b6 Python Basics Hello, World \u00b6 # Ch\u01b0\u01a1ng tr\u00ecnh \u0111\u1ea7u ti\u00ean: In ra m\u00e0n h\u00ecnh c\u00e2u \"Hello, World!\" print(\"Hello, World!\") Th\u1ef1c thi ch\u01b0\u01a1ng tr\u00ecnh Python \u00b6 Ch\u1ea1y t\u1eebng d\u00f2ng l\u1ec7nh \u00b6 C\u00e1c b\u01b0\u1edbc th\u1ef1c hi\u1ec7n: M\u1edf c\u1eeda s\u1ed5 d\u00f2ng l\u1ec7nh (terminal). Nh\u1eadp python (ho\u1eb7c python3 ) v\u00e0 nh\u1ea5n Enter \u0111\u1ec3 m\u1edf Python ch\u1ebf \u0111\u1ed9 t\u01b0\u01a1ng t\u00e1c. Nh\u1eadp t\u1eebng d\u00f2ng l\u1ec7nh \u0111\u1ec3 th\u1ef1c thi. V\u00ed d\u1ee5: Ch\u1ea1y file m\u00e3 ngu\u1ed3n t\u1eeb ch\u1ebf \u0111\u1ed9 d\u00f2ng l\u1ec7nh \u00b6 M\u1edf c\u1eeda s\u1ed5 d\u00f2ng l\u1ec7nh (terminal). Nh\u1eadp python <[path_to/]python_script_file_name.py> v\u00e0 nh\u1ea5n Enter \u0111\u1ec3 th\u1ef1c thi. Tr\u00ecnh th\u00f4ng d\u1ecbch s\u1ebd l\u1ea7n l\u01b0\u1ee3t th\u1ef1c hi\u1ec7n c\u00e1c l\u1ec7nh trong file m\u00e3 ngu\u1ed3n. Ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh Python t\u1eeb m\u00f4i tr\u01b0\u1eddng ph\u00e1t tri\u1ec3n t\u00edch h\u1ee3p (IDE) \u00b6 M\u1edf IDE l\u1eadp tr\u00ecnh Python (PyCharm, VS Code, Spyder, IDLE,...). T\u1ea1o (ho\u1eb7c m\u1edf) file ch\u01b0\u01a1ng tr\u00ecnh Python. Nh\u1ea5n l\u1ec7nh Run \u0111\u1ec3 th\u1ef1c thi ch\u01b0\u01a1ng tr\u00ecnh. Bi\u1ebfn v\u00e0 ki\u1ec3u d\u1eef li\u1ec7u \u00b6 M\u1ecdi bi\u1ebfn trong Python \u0111\u1ec1u l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng. Kh\u00f4ng c\u1ea7n ph\u1ea3i khai b\u00e1o bi\u1ebfn tr\u01b0\u1edbc khi s\u1eed d\u1ee5ng. Ki\u1ec3u d\u1eef li\u1ec7u c\u1ee7a m\u1ed9t bi\u1ebfn \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh khi g\u00e1n gi\u00e1 tr\u1ecb cho n\u00f3. Python c\u00f3 c\u00e1c ki\u1ec3u d\u1eef li\u1ec7u c\u01a1 s\u1edf sau: Ki\u1ec3u chu\u1ed7i (text) \u00b6 Chu\u1ed7i l\u00e0 d\u00e3y k\u00fd t\u1ef1 \u0111\u1eb7t trong c\u1eb7p d\u1ea5u nh\u00e1y k\u00e9p \"\" ho\u1eb7c nh\u00e1y \u0111\u01a1n ''. V\u00ed d\u1ee5: # D\u1ea1ng chu\u1ed7i 1: \u0111\u1eb7t gi\u1eefa c\u1eb7p d\u1ea5u nh\u00e1y k\u00e9p ntu_slogan1 = \"L\u1ef1a ch\u1ecdn \u0111\u00fang \u0111\u1ec3 th\u00e0nh c\u00f4ng!\" # D\u1ea1ng chu\u1ed7i 2: \u0111\u1eb7t gi\u1eefa c\u1eb7p d\u1ea5u nh\u00e1y \u0111\u01a1n ntu_slogan2 = 'C\u0103ng bu\u1ed3m tri th\u1ee9c v\u01b0\u01a1n kh\u01a1i.' print(ntu_slogan2) # D\u1ea1ng chu\u1ed7i 3: chu\u1ed7i g\u1ed3m nhi\u1ec1u d\u00f2ng verses = \"\"\" 'Tr\u1ea3i qua m\u1ed9t cu\u1ed9c b\u1ec3 d\u00e2u Nh\u1eefng \u0111i\u1ec1u tr\u00f4ng th\u1ea5y m\u00e0 \u0111au \u0111\u1edbn l\u00f2ng.' \\t\\t- tr\u00edch Truy\u1ec7n Ki\u1ec1u (Nguy\u1ec5n Du) \"\"\" print(verses) Ki\u1ec3u s\u1ed1 (numeric) \u00b6 Python c\u00f3 c\u00e1c ki\u1ec3u s\u1ed1 nguy\u00ean (int), s\u1ed1 th\u1ef1c (float). V\u00ed d\u1ee5: # Ki\u1ec3u s\u1ed1 nguy\u00ean n = 3721 # Ki\u1ec3u s\u1ed1 th\u1ef1c pi = 3.14159 print(\"PI = %.2f\" % pi) Ki\u1ec3u tu\u1ea7n t\u1ef1 (sequence) \u00b6 Ki\u1ec3u danh s\u00e1ch (sequence): list, tuple, range Ki\u1ec3u t\u1eeb \u0111i\u1ec3n (mapping): dict Ki\u1ec3u t\u1eadp h\u1ee3p (set): set, frozenset Ki\u1ec3u Boolean: bool Ki\u1ec3u nh\u1ecb ph\u00e2nBinary Types: bytes, bytearray, memoryview Ki\u1ec3u None: NoneType Note D\u00f9ng h\u00e0m type() \u0111\u1ec3 l\u1ea5y ki\u1ec3u d\u1eef li\u1ec7u c\u1ee7a m\u1ed9t bi\u1ebfn ho\u1eb7c bi\u1ec3u th\u1ee9c. V\u00ed d\u1ee5: n = 3721 print(\"Ki\u1ec3u d\u1eef li\u1ec7u c\u1ee7a n: \", type(n).__name__) PI = 3.1416 print(\"Ki\u1ec3u d\u1eef li\u1ec7u c\u1ee7a PI: \", type(PI).__name__) bon_mua = ['Xu\u00e2n', 'H\u1ea1', 'Thu', '\u0110\u00f4ng'] print(\"Ki\u1ec3u d\u1eef li\u1ec7u c\u1ee7a mua: \", type(mua).__name__) Bi\u1ebfn, bi\u1ec3u th\u1ee9c, c\u00e2u l\u1ec7nh \u00b6 Bi\u1ebfn (variables) \u00b6 Bi\u1ebfn l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng d\u00f9ng \u0111\u1ec3 l\u01b0u d\u1eef li\u1ec7u. Gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn c\u00f3 th\u1ec3 thay \u0111\u1ed5i khi ch\u01b0\u01a1ng tr\u00ecnh ho\u1ea1t \u0111\u1ed9ng. Python kh\u00f4ng c\u00f3 l\u1ec7nh khai b\u00e1o bi\u1ebfn, bi\u1ebfn \u0111\u01b0\u1ee3c t\u1ea1o ra khi g\u00e1n gi\u00e1 tr\u1ecb cho n\u00f3. C\u00fa ph\u00e1p kh\u1edfi t\u1ea1o bi\u1ebfn: <variable_name> = <value> <variable_name1>, <variable_name2> = <value1>,<value2> Trong \u0111\u00f3: T\u00ean bi\u1ebfn: \u0111\u1eb7t theo quy \u0111\u1ecbnh sau: T\u00ean bi\u1ebfn ch\u1ec9 g\u1ed3m c\u00e1c k\u00fd t\u1ef1 ch\u1eef c\u00e1i, ch\u1eef s\u1ed1 v\u00e0 d\u1ea5u g\u1ea1ch d\u01b0\u1edbi '_'. T\u00ean bi\u1ebfn ph\u1ea3i b\u1eaft \u0111\u1ea7u b\u1eb1ng ch\u1eef c\u00e1i ho\u1eb7c k\u00fd t\u1ef1 g\u1ea1ch d\u01b0\u1edbi. Kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u1eb7t t\u00ean bi\u1ebfn tr\u00f9ng v\u1edbi t\u1eeb kh\u00f3a c\u1ee7a Python . V\u00ed d\u1ee5: T\u00ean bi\u1ebfn h\u1ee3p l\u1ec7: delta , x1 , don_gia , _123abc T\u00ean bi\u1ebfn kh\u00f4ng h\u1ee3p l\u1ec7: 3VanChinNghin : b\u1eaft \u0111\u1ea7u b\u1eb1ng ch\u1eef s\u1ed1 Don Gia : ch\u1ee9a kho\u1ea3ng tr\u1eafng except : tr\u00f9ng v\u1edbi t\u1eeb kh\u00f3a c\u1ee7a Python Note Ng\u00f4n ng\u1eef Python ph\u00e2n bi\u1ec7t ch\u1eef hoa ch\u1eef th\u01b0\u1eddng (case-sensitive), n\u00ean c\u00e1c t\u00ean sau l\u00e0 kh\u00e1c nhau: TinHoc , Tinhoc , tinHoc . N\u00ean \u0111\u1eb7t t\u00ean bi\u1ebfn ng\u1eafn g\u1ecdn, c\u00f3 ngh\u0129a (di\u1ec5n t\u1ea3 n\u1ed9i dung n\u00f3 ch\u1ee9a). V\u00ed d\u1ee5, \u0111\u1ec3 vi\u1ebft l\u1ec7nh t\u00ednh qu\u00e3ng \u0111\u01b0\u1eddng \u0111i d\u1ef1a v\u00e0o v\u1eadn t\u1ed1c v\u00e0 th\u1eddi gian, thay v\u00ec vi\u1ebft d = v*t , n\u00ean vi\u1ebft distance = velocity * traveled_time ho\u1eb7c quang_duong = van_toc * thoi_gian , s\u1ebd gi\u00fap c\u00e2u l\u1ec7nh d\u1ec5 hi\u1ec3u h\u01a1n. V\u1edbi Python 3, c\u00f3 th\u1ec3 \u0111\u1eb7t t\u00ean bi\u1ebfn b\u1eb1ng k\u00fd t\u1ef1 Unicode (g\u1ed3m c\u1ea3 ti\u1ebfng Vi\u1ec7t), ch\u1eb3ng h\u1ea1n: Ba_V\u1ea1n_Ch\u00edn_Ngh\u00ecn = 39000 l\u00e0 m\u1ed9t khai b\u00e1o h\u1ee3p l\u1ec7. Tuy nhi\u00ean, ch\u1ec9 n\u00ean \u0111\u1eb7t t\u00ean bi\u1ebfn b\u1eb1ng c\u00e1c k\u00fd t\u1ef1 ASCII. M\u1ed9t s\u1ed1 v\u00ed d\u1ee5 v\u1ec1 kh\u1edfi t\u1ea1o bi\u1ebfn v\u1edbi Python: # Khai b\u00e1o bi\u1ebfn n v\u00e0 g\u00e1n s\u1ed1 nguy\u00ean cho n\u00f3 n = 3721 print(\"n = \", n) C\u00e1c c\u00e2u l\u1ec7nh \u0111i\u1ec1u khi\u1ec3n \u00b6 L\u1ec7nh r\u1ebd nh\u00e1nh if \u00b6 D\u1ea1ng 1: L\u1ec7nh if thi\u1ebfu \u00b6 N\u1ebfu <BT logic> c\u00f3 gi\u00e1 tr\u1ecb \u0111\u00fang (True) th\u00ec th\u1ef1c hi\u1ec7n <L\u1ec7nh \u0111\u01a1n> ho\u1eb7c <Kh\u1ed1i l\u1ec7nh> if <BT logic>: <L\u1ec7nh \u0111\u01a1n> ho\u1eb7c if <BT logic>: <Kh\u1ed1i l\u1ec7nh> V\u00ed d\u1ee5: n = 5 if n % 2 != 0: print(f'{n} l\u00e0 s\u1ed1 l\u1ebb.') m = 69 if m > 0: print(f'm = {m}') print(f'{m} l\u00e0 s\u1ed1 d\u01b0\u01a1ng.') D\u1ea1ng 2: L\u1ec7nh if \u0111\u1ee7 \u00b6 N\u1ebfu <BT logic> c\u00f3 gi\u00e1 tr\u1ecb \u0111\u00fang (True) th\u00ec th\u1ef1c hi\u1ec7n <Kh\u1ed1i l\u1ec7nh 1> , ng\u01b0\u1ee3c l\u1ea1i th\u1ef1c hi\u1ec7n <Kh\u1ed1i l\u1ec7nh 2> if <BT logic>: <Kh\u1ed1i l\u1ec7nh 1> else: <Kh\u1ed1i l\u1ec7nh 2> Ho\u1eb7c vi\u1ebft g\u1ecdn h\u01a1n khi ch\u1ec9 c\u00f3 l\u1ec7nh \u0111\u01a1n: <L\u1ec7nh 1> if <BT logic> else <L\u1ec7nh 2> V\u00ed d\u1ee5: n = 5 if n % 2 != 0: print(f'{n} l\u00e0 s\u1ed1 l\u1ebb.') else: print(f'{n} l\u00e0 s\u1ed1 ch\u1eb5n.') a, b = 6, 9 print(f'{a} > {b}') if a > b else print(f'{b} > {a}') elif \u00b6 Trong l\u1ec7nh if, mu\u1ed1n ki\u1ec3m tra \u0111i\u1ec1u ki\u1ec7n m\u1edbi khi \u0111i\u1ec1u ki\u1ec7n tr\u01b0\u1edbc kh\u00f4ng th\u1ecfa m\u00e3n th\u00ec d\u00f9ng t\u1eeb kh\u00f3a elif if <BT logic 1>: <Kh\u1ed1i l\u1ec7nh 1> elif <BT logic 2>: <Kh\u1ed1i l\u1ec7nh 2> ... elif <BT logic n>: <Kh\u1ed1i l\u1ec7nh n> else: <Kh\u1ed1i l\u1ec7nh n+1> L\u1ec7nh l\u1eb7p \u00b6 L\u1ec7nh l\u1eb7p while \u00b6 L\u1ec7nh l\u1eb7p while l\u1eb7p l\u1ea1i kh\u1ed1i l\u1ec7nh ch\u1eebng n\u00e0o BT \u0111i\u1ec1u ki\u1ec7n c\u00f2n \u0111\u00fang. while <BT \u0111i\u1ec1u ki\u1ec7n>: <Kh\u1ed1i l\u1ec7nh> V\u00ed d\u1ee5: T\u00ednh t\u1ed5ng c\u00e1c ch\u1eef s\u1ed1 c\u1ee7a s\u1ed1 t\u1ef1 nhi\u00ean n: n = 123 sum_digits = 0 while n > 0: sum_digits += n % 10 n = n // 10 print(f'T\u1ed5ng ch\u1eef s\u1ed1 = {sum_digits}') L\u1ec7nh break \u00b6 L\u1ec7nh `break' khi \u0111\u01b0\u1ee3c g\u1ecdi s\u1ebd d\u1eebng v\u00f2ng l\u1eb7p. Trong v\u00ed d\u1ee5 sau, d\u00f9 \u0111i\u1ec1u ki\u1ec7n l\u1eb7p l\u00e0 i < 100 , nh\u01b0ng n\u1ebfu i b\u1eb1ng 5 th\u00ec d\u1eebng v\u00f2ng l\u1eb7p, n\u00ean ch\u01b0\u01a1ng tr\u00ecnh ch\u1ec9 in ra c\u00e1c s\u1ed1 nguy\u00ean li\u00ean ti\u1ebfp t\u1eeb 1 \u0111\u1ebfn 4. i = 1 while i < 100: print(i, end= ' ') i += 1 if i == 5: break L\u1ec7nh continue \u00b6 L\u1ec7nh `continue' khi \u0111\u01b0\u1ee3c g\u1ecdi s\u1ebd chuy\u1ec3n sang v\u00f2ng l\u1eb7p k\u1ebf ti\u1ebfp. Trong v\u00ed d\u1ee5 sau, bi\u1ebfn i kh\u1edfi \u0111\u1ea7u b\u1eb1ng 0, ch\u1eebng n\u00e0o i c\u00f2n th\u1ecfa < 10 th\u00ec t\u0103ng i th\u00eam 1 v\u00e0 in ra gi\u00e1 tr\u1ecb c\u1ee7a i, nh\u01b0ng n\u1ebfu i l\u00e0 s\u1ed1 ch\u1eb5n th\u00ec l\u1ec7nh continue \u0111\u01b0\u1ee3c g\u1ecdi, ch\u01b0\u01a1ng tr\u00ecnh chuy\u1ec3n sang x\u1eed l\u00fd b\u01b0\u1edbc l\u1eb7p ti\u1ebfp theo m\u00e0 b\u1ecf qua l\u1ec7nh print(i, end=' ') . K\u1ebft qu\u1ea3 l\u00e0 ch\u01b0\u01a1ng tr\u00ecnh ch\u1ec9 in ra c\u00e1c s\u1ed1 l\u1ebb t\u1eeb 1 \u0111\u1ebfn 9. i = 0 while i < 10: i += 1 if i % 2 == 0: continue print(i, end= ' ') L\u1ec7nh l\u1eb7p for \u00b6 L\u1ec7nh l\u1eb7p for d\u00f9ng \u0111\u1ec3 duy\u1ec7t t\u1eebng ph\u1ea7n t\u1eed trong m\u1ed9t d\u00e3y (list, tuple, dictionary, set, string). Duy\u1ec7t danh s\u00e1ch \u00b6 C\u00fa ph\u00e1p for <bi\u1ebfn ch\u1ea1y> in <danh s\u00e1ch>: <Kh\u1ed1i l\u1ec7nh> V\u00ed d\u1ee5 T\u1ee9_Linh = ['Long', 'Ly', 'Quy', 'Ph\u01b0\u1ee3ng'] # C\u00e1ch 1: duy\u1ec7t t\u1eebng ph\u1ea7n t\u1eed c\u1ee7a danh s\u00e1ch for tl in T\u1ee9_Linh: print(tl, end=' ') # C\u00e1ch 2: duy\u1ec7t t\u1eebng ph\u1ea7n t\u1eed th\u00f4ng qua v\u1ecb tr\u00ed trong danh s\u00e1ch for i in range(len(T\u1ee9_Linh)): print(T\u1ee9_Linh[i], end=' ') Duy\u1ec7t chu\u1ed7i k\u00fd t\u1ef1 \u00b6 Chu\u1ed7i l\u00e0 m\u1ed9t d\u00e3y k\u00fd t\u1ef1 v\u00ec th\u1ebf c\u00f3 th\u1ec3 duy\u1ec7t t\u1eebng k\u00fd t\u1ef1 c\u1ee7a chu\u1ed7i b\u1eb1ng l\u1ec7nh for. C\u00fa ph\u00e1p for ch in <chu\u1ed7i>: <L\u1ec7nh> V\u00ed d\u1ee5 st = 'Nha Trang Kh\u00e1nh H\u00f2a' for ch in st: print(ch) H\u00e0m range() \u00b6 h\u00e0m range(<start_value>, <end_value>, <step>) th\u01b0\u1eddng \u0111\u01b0\u1ee3c k\u1ebft h\u1ee3p khi mu\u1ed1n th\u1ef1c hi\u1ec7n l\u1ec7nh l\u1eb7p v\u1edbi s\u1ed1 b\u01b0\u1edbc l\u1eb7p x\u00e1c \u0111\u1ecbnh. V\u00ed d\u1ee5: In 10 d\u00f2ng 'Hello world' for i in range(10): # range(0, 10, 1) print('Hello world') L\u1ec7nh l\u1eb7p l\u1ed3ng nhau (nested loop) \u00b6 L\u1ec7nh l\u1eb7p l\u1ed3ng nhau: Trong m\u1ed9t l\u1ec7nh l\u1eb7p ch\u1ee9a l\u1ec7nh l\u1eb7p kh\u00e1c. V\u1edbi m\u1ed7i b\u01b0\u1edbc l\u1eb7p c\u1ee7a v\u00f2ng l\u1eb7p ngo\u00e0i, l\u1ec7nh l\u1eb7p b\u00ean trong s\u1ebd th\u1ef1c hi\u1ec7n h\u1ebft m\u1ed9t l\u01b0\u1ee3t. V\u00ed d\u1ee5: In b\u1ea3ng c\u1eedu ch\u01b0\u01a1ng for i in range(2, 10): for j in range(1, 11): print('%3d x %3d = %3d' % (i, j, i*j))","title":"Python c\u01a1 b\u1ea3n"},{"location":"topics/python-basic/README-Hung-Desktop/#python-co-ban","text":"Python Basics","title":"Python c\u01a1 b\u1ea3n"},{"location":"topics/python-basic/README-Hung-Desktop/#hello-world","text":"# Ch\u01b0\u01a1ng tr\u00ecnh \u0111\u1ea7u ti\u00ean: In ra m\u00e0n h\u00ecnh c\u00e2u \"Hello, World!\" print(\"Hello, World!\")","title":"Hello, World"},{"location":"topics/python-basic/README-Hung-Desktop/#thuc-thi-chuong-trinh-python","text":"","title":"Th\u1ef1c thi ch\u01b0\u01a1ng tr\u00ecnh Python"},{"location":"topics/python-basic/README-Hung-Desktop/#chay-tung-dong-lenh","text":"C\u00e1c b\u01b0\u1edbc th\u1ef1c hi\u1ec7n: M\u1edf c\u1eeda s\u1ed5 d\u00f2ng l\u1ec7nh (terminal). Nh\u1eadp python (ho\u1eb7c python3 ) v\u00e0 nh\u1ea5n Enter \u0111\u1ec3 m\u1edf Python ch\u1ebf \u0111\u1ed9 t\u01b0\u01a1ng t\u00e1c. Nh\u1eadp t\u1eebng d\u00f2ng l\u1ec7nh \u0111\u1ec3 th\u1ef1c thi. V\u00ed d\u1ee5:","title":"Ch\u1ea1y t\u1eebng d\u00f2ng l\u1ec7nh"},{"location":"topics/python-basic/README-Hung-Desktop/#chay-file-ma-nguon-tu-che-o-dong-lenh","text":"M\u1edf c\u1eeda s\u1ed5 d\u00f2ng l\u1ec7nh (terminal). Nh\u1eadp python <[path_to/]python_script_file_name.py> v\u00e0 nh\u1ea5n Enter \u0111\u1ec3 th\u1ef1c thi. Tr\u00ecnh th\u00f4ng d\u1ecbch s\u1ebd l\u1ea7n l\u01b0\u1ee3t th\u1ef1c hi\u1ec7n c\u00e1c l\u1ec7nh trong file m\u00e3 ngu\u1ed3n.","title":"Ch\u1ea1y file m\u00e3 ngu\u1ed3n t\u1eeb ch\u1ebf \u0111\u1ed9 d\u00f2ng l\u1ec7nh"},{"location":"topics/python-basic/README-Hung-Desktop/#chay-chuong-trinh-python-tu-moi-truong-phat-trien-tich-hop-ide","text":"M\u1edf IDE l\u1eadp tr\u00ecnh Python (PyCharm, VS Code, Spyder, IDLE,...). T\u1ea1o (ho\u1eb7c m\u1edf) file ch\u01b0\u01a1ng tr\u00ecnh Python. Nh\u1ea5n l\u1ec7nh Run \u0111\u1ec3 th\u1ef1c thi ch\u01b0\u01a1ng tr\u00ecnh.","title":"Ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh Python t\u1eeb m\u00f4i tr\u01b0\u1eddng ph\u00e1t tri\u1ec3n t\u00edch h\u1ee3p (IDE)"},{"location":"topics/python-basic/README-Hung-Desktop/#bien-va-kieu-du-lieu","text":"M\u1ecdi bi\u1ebfn trong Python \u0111\u1ec1u l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng. Kh\u00f4ng c\u1ea7n ph\u1ea3i khai b\u00e1o bi\u1ebfn tr\u01b0\u1edbc khi s\u1eed d\u1ee5ng. Ki\u1ec3u d\u1eef li\u1ec7u c\u1ee7a m\u1ed9t bi\u1ebfn \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh khi g\u00e1n gi\u00e1 tr\u1ecb cho n\u00f3. Python c\u00f3 c\u00e1c ki\u1ec3u d\u1eef li\u1ec7u c\u01a1 s\u1edf sau:","title":"Bi\u1ebfn v\u00e0 ki\u1ec3u d\u1eef li\u1ec7u"},{"location":"topics/python-basic/README-Hung-Desktop/#kieu-chuoi-text","text":"Chu\u1ed7i l\u00e0 d\u00e3y k\u00fd t\u1ef1 \u0111\u1eb7t trong c\u1eb7p d\u1ea5u nh\u00e1y k\u00e9p \"\" ho\u1eb7c nh\u00e1y \u0111\u01a1n ''. V\u00ed d\u1ee5: # D\u1ea1ng chu\u1ed7i 1: \u0111\u1eb7t gi\u1eefa c\u1eb7p d\u1ea5u nh\u00e1y k\u00e9p ntu_slogan1 = \"L\u1ef1a ch\u1ecdn \u0111\u00fang \u0111\u1ec3 th\u00e0nh c\u00f4ng!\" # D\u1ea1ng chu\u1ed7i 2: \u0111\u1eb7t gi\u1eefa c\u1eb7p d\u1ea5u nh\u00e1y \u0111\u01a1n ntu_slogan2 = 'C\u0103ng bu\u1ed3m tri th\u1ee9c v\u01b0\u01a1n kh\u01a1i.' print(ntu_slogan2) # D\u1ea1ng chu\u1ed7i 3: chu\u1ed7i g\u1ed3m nhi\u1ec1u d\u00f2ng verses = \"\"\" 'Tr\u1ea3i qua m\u1ed9t cu\u1ed9c b\u1ec3 d\u00e2u Nh\u1eefng \u0111i\u1ec1u tr\u00f4ng th\u1ea5y m\u00e0 \u0111au \u0111\u1edbn l\u00f2ng.' \\t\\t- tr\u00edch Truy\u1ec7n Ki\u1ec1u (Nguy\u1ec5n Du) \"\"\" print(verses)","title":"Ki\u1ec3u chu\u1ed7i (text)"},{"location":"topics/python-basic/README-Hung-Desktop/#kieu-so-numeric","text":"Python c\u00f3 c\u00e1c ki\u1ec3u s\u1ed1 nguy\u00ean (int), s\u1ed1 th\u1ef1c (float). V\u00ed d\u1ee5: # Ki\u1ec3u s\u1ed1 nguy\u00ean n = 3721 # Ki\u1ec3u s\u1ed1 th\u1ef1c pi = 3.14159 print(\"PI = %.2f\" % pi)","title":"Ki\u1ec3u s\u1ed1 (numeric)"},{"location":"topics/python-basic/README-Hung-Desktop/#kieu-tuan-tu-sequence","text":"Ki\u1ec3u danh s\u00e1ch (sequence): list, tuple, range Ki\u1ec3u t\u1eeb \u0111i\u1ec3n (mapping): dict Ki\u1ec3u t\u1eadp h\u1ee3p (set): set, frozenset Ki\u1ec3u Boolean: bool Ki\u1ec3u nh\u1ecb ph\u00e2nBinary Types: bytes, bytearray, memoryview Ki\u1ec3u None: NoneType Note D\u00f9ng h\u00e0m type() \u0111\u1ec3 l\u1ea5y ki\u1ec3u d\u1eef li\u1ec7u c\u1ee7a m\u1ed9t bi\u1ebfn ho\u1eb7c bi\u1ec3u th\u1ee9c. V\u00ed d\u1ee5: n = 3721 print(\"Ki\u1ec3u d\u1eef li\u1ec7u c\u1ee7a n: \", type(n).__name__) PI = 3.1416 print(\"Ki\u1ec3u d\u1eef li\u1ec7u c\u1ee7a PI: \", type(PI).__name__) bon_mua = ['Xu\u00e2n', 'H\u1ea1', 'Thu', '\u0110\u00f4ng'] print(\"Ki\u1ec3u d\u1eef li\u1ec7u c\u1ee7a mua: \", type(mua).__name__)","title":"Ki\u1ec3u tu\u1ea7n t\u1ef1 (sequence)"},{"location":"topics/python-basic/README-Hung-Desktop/#bien-bieu-thuc-cau-lenh","text":"","title":"Bi\u1ebfn, bi\u1ec3u th\u1ee9c, c\u00e2u l\u1ec7nh"},{"location":"topics/python-basic/README-Hung-Desktop/#bien-variables","text":"Bi\u1ebfn l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng d\u00f9ng \u0111\u1ec3 l\u01b0u d\u1eef li\u1ec7u. Gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn c\u00f3 th\u1ec3 thay \u0111\u1ed5i khi ch\u01b0\u01a1ng tr\u00ecnh ho\u1ea1t \u0111\u1ed9ng. Python kh\u00f4ng c\u00f3 l\u1ec7nh khai b\u00e1o bi\u1ebfn, bi\u1ebfn \u0111\u01b0\u1ee3c t\u1ea1o ra khi g\u00e1n gi\u00e1 tr\u1ecb cho n\u00f3. C\u00fa ph\u00e1p kh\u1edfi t\u1ea1o bi\u1ebfn: <variable_name> = <value> <variable_name1>, <variable_name2> = <value1>,<value2> Trong \u0111\u00f3: T\u00ean bi\u1ebfn: \u0111\u1eb7t theo quy \u0111\u1ecbnh sau: T\u00ean bi\u1ebfn ch\u1ec9 g\u1ed3m c\u00e1c k\u00fd t\u1ef1 ch\u1eef c\u00e1i, ch\u1eef s\u1ed1 v\u00e0 d\u1ea5u g\u1ea1ch d\u01b0\u1edbi '_'. T\u00ean bi\u1ebfn ph\u1ea3i b\u1eaft \u0111\u1ea7u b\u1eb1ng ch\u1eef c\u00e1i ho\u1eb7c k\u00fd t\u1ef1 g\u1ea1ch d\u01b0\u1edbi. Kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u1eb7t t\u00ean bi\u1ebfn tr\u00f9ng v\u1edbi t\u1eeb kh\u00f3a c\u1ee7a Python . V\u00ed d\u1ee5: T\u00ean bi\u1ebfn h\u1ee3p l\u1ec7: delta , x1 , don_gia , _123abc T\u00ean bi\u1ebfn kh\u00f4ng h\u1ee3p l\u1ec7: 3VanChinNghin : b\u1eaft \u0111\u1ea7u b\u1eb1ng ch\u1eef s\u1ed1 Don Gia : ch\u1ee9a kho\u1ea3ng tr\u1eafng except : tr\u00f9ng v\u1edbi t\u1eeb kh\u00f3a c\u1ee7a Python Note Ng\u00f4n ng\u1eef Python ph\u00e2n bi\u1ec7t ch\u1eef hoa ch\u1eef th\u01b0\u1eddng (case-sensitive), n\u00ean c\u00e1c t\u00ean sau l\u00e0 kh\u00e1c nhau: TinHoc , Tinhoc , tinHoc . N\u00ean \u0111\u1eb7t t\u00ean bi\u1ebfn ng\u1eafn g\u1ecdn, c\u00f3 ngh\u0129a (di\u1ec5n t\u1ea3 n\u1ed9i dung n\u00f3 ch\u1ee9a). V\u00ed d\u1ee5, \u0111\u1ec3 vi\u1ebft l\u1ec7nh t\u00ednh qu\u00e3ng \u0111\u01b0\u1eddng \u0111i d\u1ef1a v\u00e0o v\u1eadn t\u1ed1c v\u00e0 th\u1eddi gian, thay v\u00ec vi\u1ebft d = v*t , n\u00ean vi\u1ebft distance = velocity * traveled_time ho\u1eb7c quang_duong = van_toc * thoi_gian , s\u1ebd gi\u00fap c\u00e2u l\u1ec7nh d\u1ec5 hi\u1ec3u h\u01a1n. V\u1edbi Python 3, c\u00f3 th\u1ec3 \u0111\u1eb7t t\u00ean bi\u1ebfn b\u1eb1ng k\u00fd t\u1ef1 Unicode (g\u1ed3m c\u1ea3 ti\u1ebfng Vi\u1ec7t), ch\u1eb3ng h\u1ea1n: Ba_V\u1ea1n_Ch\u00edn_Ngh\u00ecn = 39000 l\u00e0 m\u1ed9t khai b\u00e1o h\u1ee3p l\u1ec7. Tuy nhi\u00ean, ch\u1ec9 n\u00ean \u0111\u1eb7t t\u00ean bi\u1ebfn b\u1eb1ng c\u00e1c k\u00fd t\u1ef1 ASCII. M\u1ed9t s\u1ed1 v\u00ed d\u1ee5 v\u1ec1 kh\u1edfi t\u1ea1o bi\u1ebfn v\u1edbi Python: # Khai b\u00e1o bi\u1ebfn n v\u00e0 g\u00e1n s\u1ed1 nguy\u00ean cho n\u00f3 n = 3721 print(\"n = \", n)","title":"Bi\u1ebfn (variables)"},{"location":"topics/python-basic/README-Hung-Desktop/#cac-cau-lenh-ieu-khien","text":"","title":"C\u00e1c c\u00e2u l\u1ec7nh \u0111i\u1ec1u khi\u1ec3n"},{"location":"topics/python-basic/README-Hung-Desktop/#lenh-re-nhanh-if","text":"","title":"L\u1ec7nh r\u1ebd nh\u00e1nh if"},{"location":"topics/python-basic/README-Hung-Desktop/#dang-1-lenh-if-thieu","text":"N\u1ebfu <BT logic> c\u00f3 gi\u00e1 tr\u1ecb \u0111\u00fang (True) th\u00ec th\u1ef1c hi\u1ec7n <L\u1ec7nh \u0111\u01a1n> ho\u1eb7c <Kh\u1ed1i l\u1ec7nh> if <BT logic>: <L\u1ec7nh \u0111\u01a1n> ho\u1eb7c if <BT logic>: <Kh\u1ed1i l\u1ec7nh> V\u00ed d\u1ee5: n = 5 if n % 2 != 0: print(f'{n} l\u00e0 s\u1ed1 l\u1ebb.') m = 69 if m > 0: print(f'm = {m}') print(f'{m} l\u00e0 s\u1ed1 d\u01b0\u01a1ng.')","title":"D\u1ea1ng 1: L\u1ec7nh if thi\u1ebfu"},{"location":"topics/python-basic/README-Hung-Desktop/#dang-2-lenh-if-u","text":"N\u1ebfu <BT logic> c\u00f3 gi\u00e1 tr\u1ecb \u0111\u00fang (True) th\u00ec th\u1ef1c hi\u1ec7n <Kh\u1ed1i l\u1ec7nh 1> , ng\u01b0\u1ee3c l\u1ea1i th\u1ef1c hi\u1ec7n <Kh\u1ed1i l\u1ec7nh 2> if <BT logic>: <Kh\u1ed1i l\u1ec7nh 1> else: <Kh\u1ed1i l\u1ec7nh 2> Ho\u1eb7c vi\u1ebft g\u1ecdn h\u01a1n khi ch\u1ec9 c\u00f3 l\u1ec7nh \u0111\u01a1n: <L\u1ec7nh 1> if <BT logic> else <L\u1ec7nh 2> V\u00ed d\u1ee5: n = 5 if n % 2 != 0: print(f'{n} l\u00e0 s\u1ed1 l\u1ebb.') else: print(f'{n} l\u00e0 s\u1ed1 ch\u1eb5n.') a, b = 6, 9 print(f'{a} > {b}') if a > b else print(f'{b} > {a}')","title":"D\u1ea1ng 2: L\u1ec7nh if \u0111\u1ee7"},{"location":"topics/python-basic/README-Hung-Desktop/#elif","text":"Trong l\u1ec7nh if, mu\u1ed1n ki\u1ec3m tra \u0111i\u1ec1u ki\u1ec7n m\u1edbi khi \u0111i\u1ec1u ki\u1ec7n tr\u01b0\u1edbc kh\u00f4ng th\u1ecfa m\u00e3n th\u00ec d\u00f9ng t\u1eeb kh\u00f3a elif if <BT logic 1>: <Kh\u1ed1i l\u1ec7nh 1> elif <BT logic 2>: <Kh\u1ed1i l\u1ec7nh 2> ... elif <BT logic n>: <Kh\u1ed1i l\u1ec7nh n> else: <Kh\u1ed1i l\u1ec7nh n+1>","title":"elif"},{"location":"topics/python-basic/README-Hung-Desktop/#lenh-lap","text":"","title":"L\u1ec7nh l\u1eb7p"},{"location":"topics/python-basic/README-Hung-Desktop/#lenh-lap-while","text":"L\u1ec7nh l\u1eb7p while l\u1eb7p l\u1ea1i kh\u1ed1i l\u1ec7nh ch\u1eebng n\u00e0o BT \u0111i\u1ec1u ki\u1ec7n c\u00f2n \u0111\u00fang. while <BT \u0111i\u1ec1u ki\u1ec7n>: <Kh\u1ed1i l\u1ec7nh> V\u00ed d\u1ee5: T\u00ednh t\u1ed5ng c\u00e1c ch\u1eef s\u1ed1 c\u1ee7a s\u1ed1 t\u1ef1 nhi\u00ean n: n = 123 sum_digits = 0 while n > 0: sum_digits += n % 10 n = n // 10 print(f'T\u1ed5ng ch\u1eef s\u1ed1 = {sum_digits}')","title":"L\u1ec7nh l\u1eb7p while"},{"location":"topics/python-basic/README-Hung-Desktop/#lenh-break","text":"L\u1ec7nh `break' khi \u0111\u01b0\u1ee3c g\u1ecdi s\u1ebd d\u1eebng v\u00f2ng l\u1eb7p. Trong v\u00ed d\u1ee5 sau, d\u00f9 \u0111i\u1ec1u ki\u1ec7n l\u1eb7p l\u00e0 i < 100 , nh\u01b0ng n\u1ebfu i b\u1eb1ng 5 th\u00ec d\u1eebng v\u00f2ng l\u1eb7p, n\u00ean ch\u01b0\u01a1ng tr\u00ecnh ch\u1ec9 in ra c\u00e1c s\u1ed1 nguy\u00ean li\u00ean ti\u1ebfp t\u1eeb 1 \u0111\u1ebfn 4. i = 1 while i < 100: print(i, end= ' ') i += 1 if i == 5: break","title":"L\u1ec7nh break"},{"location":"topics/python-basic/README-Hung-Desktop/#lenh-continue","text":"L\u1ec7nh `continue' khi \u0111\u01b0\u1ee3c g\u1ecdi s\u1ebd chuy\u1ec3n sang v\u00f2ng l\u1eb7p k\u1ebf ti\u1ebfp. Trong v\u00ed d\u1ee5 sau, bi\u1ebfn i kh\u1edfi \u0111\u1ea7u b\u1eb1ng 0, ch\u1eebng n\u00e0o i c\u00f2n th\u1ecfa < 10 th\u00ec t\u0103ng i th\u00eam 1 v\u00e0 in ra gi\u00e1 tr\u1ecb c\u1ee7a i, nh\u01b0ng n\u1ebfu i l\u00e0 s\u1ed1 ch\u1eb5n th\u00ec l\u1ec7nh continue \u0111\u01b0\u1ee3c g\u1ecdi, ch\u01b0\u01a1ng tr\u00ecnh chuy\u1ec3n sang x\u1eed l\u00fd b\u01b0\u1edbc l\u1eb7p ti\u1ebfp theo m\u00e0 b\u1ecf qua l\u1ec7nh print(i, end=' ') . K\u1ebft qu\u1ea3 l\u00e0 ch\u01b0\u01a1ng tr\u00ecnh ch\u1ec9 in ra c\u00e1c s\u1ed1 l\u1ebb t\u1eeb 1 \u0111\u1ebfn 9. i = 0 while i < 10: i += 1 if i % 2 == 0: continue print(i, end= ' ')","title":"L\u1ec7nh continue"},{"location":"topics/python-basic/README-Hung-Desktop/#lenh-lap-for","text":"L\u1ec7nh l\u1eb7p for d\u00f9ng \u0111\u1ec3 duy\u1ec7t t\u1eebng ph\u1ea7n t\u1eed trong m\u1ed9t d\u00e3y (list, tuple, dictionary, set, string).","title":"L\u1ec7nh l\u1eb7p for"},{"location":"topics/python-basic/README-Hung-Desktop/#duyet-danh-sach","text":"C\u00fa ph\u00e1p for <bi\u1ebfn ch\u1ea1y> in <danh s\u00e1ch>: <Kh\u1ed1i l\u1ec7nh> V\u00ed d\u1ee5 T\u1ee9_Linh = ['Long', 'Ly', 'Quy', 'Ph\u01b0\u1ee3ng'] # C\u00e1ch 1: duy\u1ec7t t\u1eebng ph\u1ea7n t\u1eed c\u1ee7a danh s\u00e1ch for tl in T\u1ee9_Linh: print(tl, end=' ') # C\u00e1ch 2: duy\u1ec7t t\u1eebng ph\u1ea7n t\u1eed th\u00f4ng qua v\u1ecb tr\u00ed trong danh s\u00e1ch for i in range(len(T\u1ee9_Linh)): print(T\u1ee9_Linh[i], end=' ')","title":"Duy\u1ec7t danh s\u00e1ch"},{"location":"topics/python-basic/README-Hung-Desktop/#duyet-chuoi-ky-tu","text":"Chu\u1ed7i l\u00e0 m\u1ed9t d\u00e3y k\u00fd t\u1ef1 v\u00ec th\u1ebf c\u00f3 th\u1ec3 duy\u1ec7t t\u1eebng k\u00fd t\u1ef1 c\u1ee7a chu\u1ed7i b\u1eb1ng l\u1ec7nh for. C\u00fa ph\u00e1p for ch in <chu\u1ed7i>: <L\u1ec7nh> V\u00ed d\u1ee5 st = 'Nha Trang Kh\u00e1nh H\u00f2a' for ch in st: print(ch)","title":"Duy\u1ec7t chu\u1ed7i k\u00fd t\u1ef1"},{"location":"topics/python-basic/README-Hung-Desktop/#ham-range","text":"h\u00e0m range(<start_value>, <end_value>, <step>) th\u01b0\u1eddng \u0111\u01b0\u1ee3c k\u1ebft h\u1ee3p khi mu\u1ed1n th\u1ef1c hi\u1ec7n l\u1ec7nh l\u1eb7p v\u1edbi s\u1ed1 b\u01b0\u1edbc l\u1eb7p x\u00e1c \u0111\u1ecbnh. V\u00ed d\u1ee5: In 10 d\u00f2ng 'Hello world' for i in range(10): # range(0, 10, 1) print('Hello world')","title":"H\u00e0m range()"},{"location":"topics/python-basic/README-Hung-Desktop/#lenh-lap-long-nhau-nested-loop","text":"L\u1ec7nh l\u1eb7p l\u1ed3ng nhau: Trong m\u1ed9t l\u1ec7nh l\u1eb7p ch\u1ee9a l\u1ec7nh l\u1eb7p kh\u00e1c. V\u1edbi m\u1ed7i b\u01b0\u1edbc l\u1eb7p c\u1ee7a v\u00f2ng l\u1eb7p ngo\u00e0i, l\u1ec7nh l\u1eb7p b\u00ean trong s\u1ebd th\u1ef1c hi\u1ec7n h\u1ebft m\u1ed9t l\u01b0\u1ee3t. V\u00ed d\u1ee5: In b\u1ea3ng c\u1eedu ch\u01b0\u01a1ng for i in range(2, 10): for j in range(1, 11): print('%3d x %3d = %3d' % (i, j, i*j))","title":"L\u1ec7nh l\u1eb7p l\u1ed3ng nhau (nested loop)"},{"location":"topics/python-oop/","text":"L\u1eadp tr\u00ecnh h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng v\u1edbi Python \u00b6 Python OOP C\u00e1c kh\u00e1i ni\u1ec7m c\u01a1 b\u1ea3n \u00b6 L\u1edbp (class): L\u00e0 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u m\u00f4 t\u1ea3 c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng gi\u1ed1ng nhau v\u1ec1 t\u00ednh ch\u1ea5t (properties) v\u00e0 ph\u01b0\u01a1ng th\u1ee9c (methods). \u0110\u1ed1i t\u01b0\u1ee3ng (object): l\u00e0 th\u1ef1c th\u1ec3 \u0111\u01b0\u1ee3c t\u1ea1o ra t\u1eeb m\u1ed9t l\u1edbp. M\u1ed9t l\u1edbp c\u00f3 th\u1ec3 t\u1ea1o ra nhi\u1ec1u \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c nhau. \u0110\u1ecbnh ngh\u0129a l\u1edbp \u00b6 C\u00fa ph\u00e1p class ClassName: <C\u00e1c bi\u1ebfn th\u00e0nh vi\u00ean> <C\u00e1c h\u00e0m th\u00e0nh vi\u00ean> Ph\u01b0\u01a1ng th\u1ee9c __init__() \u00b6 H\u00e0m thi\u1ebft l\u1eadp (constructor) c\u1ee7a l\u1edbp Python c\u00f3 t\u00ean l\u00e0 __init__() . H\u00e0m thi\u1ebft l\u1eadp \u0111\u01b0\u1ee3c g\u1ecdi m\u1ed7i khi \u0111\u1ed1i t\u01b0\u1ee3ng \u0111\u01b0\u1ee3c t\u1ea1o ra. V\u00ec th\u1ebf, th\u01b0\u1eddng d\u00f9ng h\u00e0m n\u00e0y \u0111\u1ec3 kh\u1edfi t\u1ea1o c\u00e1c gi\u00e1 tr\u1ecb ban \u0111\u1ea7u cho \u0111\u1ed1i t\u01b0\u1ee3ng. V\u00ed d\u1ee5: # Khai b\u00e1o l\u1edbp h\u1ecdc sinh class Student: # Khai b\u00e1o h\u00e0m kh\u1edfi t\u1ea1o def __init__(self, name, age): self.name = name self.age = age def PrintInfo(self): print('{}, {}'.format(self.name, self.age)) # T\u1ea1o \u0111\u1ed1i t\u01b0\u1ee3ng v\u00e0 kh\u1edfi t\u1ea1o gi\u00e1 tr\u1ecb sv1 = Student(\"Trung\", 18) sv2 = Student('Th\u1ef1c', 19) sv1.PrintInfo() sv2.PrintInfo() L\u1edbp b\u00ean trong l\u1edbp \u00b6 V\u00ed d\u1ee5: # Minh h\u1ecda c\u00e0i \u0111\u1eb7t l\u1edbp b\u00ean trong l\u1edbp # L\u1edbp Laptop (outer class) import datetime class Laptop: # Ph\u01b0\u01a1ng th\u1ee9c kh\u1edfi t\u1ea1o c\u1ee7a l\u1edbp ngo\u00e0i def __init__(self, model, year=datetime.datetime.now().year, btr_voltage=None, btr_capacity=None): assert isinstance(year, int) and year > 0, 'N\u0103m ph\u1ea3i l\u00e0 s\u1ed1 nguy\u00ean d\u01b0\u01a1ng' self.Model = model # model self.Year = year # n\u0103m s\u1ea3n xu\u1ea5t self.Battery = self.Battery(btr_voltage, btr_capacity) # Ph\u01b0\u01a1ng th\u1ee9c in th\u00f4ng tin c\u1ee7a l\u1edbp ngo\u00e0i def PrintInfo(self): print('Laptop model: {}, Year: {}'.format(self.Model, self.Year)) # G\u1ecdi ph\u01b0\u01a1ng th\u1ee9c in th\u00f4ng tin c\u1ee7a l\u1edbp trong self.Battery.PrintInfo() # C\u00e0i \u0111\u1eb7t l\u1edbp Battery (inner class) b\u00ean trong l\u1edbp Laptop class Battery: # Ph\u01b0\u01a1ng th\u1ee9c kh\u1edfi t\u1ea1o c\u1ee7a l\u1edbp trong def __init__(self, volate, capacity): self.Voltage = volate # \u0110i\u1ec7n th\u1ebf self.Capacity = capacity # Dung l\u01b0\u1ee3ng # Ph\u01b0\u01a1ng th\u1ee9c in th\u00f4ng tin c\u1ee7a l\u1edbp trong def PrintInfo(self): print('Battery info: Voltage: {}, Capacity: {}'.format(self.Voltage, self.Capacity)) # Ch\u01b0\u01a1ng tr\u00ecnh ch\u00ednh if __name__ == '__main__': lap1 = Laptop('Dell', 2020, '12V', '55kWh') lap1.PrintInfo()","title":"L\u1eadp tr\u00ecnh h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng v\u1edbi Python"},{"location":"topics/python-oop/#lap-trinh-huong-oi-tuong-voi-python","text":"Python OOP","title":"L\u1eadp tr\u00ecnh h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng v\u1edbi Python"},{"location":"topics/python-oop/#cac-khai-niem-co-ban","text":"L\u1edbp (class): L\u00e0 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u m\u00f4 t\u1ea3 c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng gi\u1ed1ng nhau v\u1ec1 t\u00ednh ch\u1ea5t (properties) v\u00e0 ph\u01b0\u01a1ng th\u1ee9c (methods). \u0110\u1ed1i t\u01b0\u1ee3ng (object): l\u00e0 th\u1ef1c th\u1ec3 \u0111\u01b0\u1ee3c t\u1ea1o ra t\u1eeb m\u1ed9t l\u1edbp. M\u1ed9t l\u1edbp c\u00f3 th\u1ec3 t\u1ea1o ra nhi\u1ec1u \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c nhau.","title":"C\u00e1c kh\u00e1i ni\u1ec7m c\u01a1 b\u1ea3n"},{"location":"topics/python-oop/#inh-nghia-lop","text":"C\u00fa ph\u00e1p class ClassName: <C\u00e1c bi\u1ebfn th\u00e0nh vi\u00ean> <C\u00e1c h\u00e0m th\u00e0nh vi\u00ean>","title":"\u0110\u1ecbnh ngh\u0129a l\u1edbp"},{"location":"topics/python-oop/#phuong-thuc-__init__","text":"H\u00e0m thi\u1ebft l\u1eadp (constructor) c\u1ee7a l\u1edbp Python c\u00f3 t\u00ean l\u00e0 __init__() . H\u00e0m thi\u1ebft l\u1eadp \u0111\u01b0\u1ee3c g\u1ecdi m\u1ed7i khi \u0111\u1ed1i t\u01b0\u1ee3ng \u0111\u01b0\u1ee3c t\u1ea1o ra. V\u00ec th\u1ebf, th\u01b0\u1eddng d\u00f9ng h\u00e0m n\u00e0y \u0111\u1ec3 kh\u1edfi t\u1ea1o c\u00e1c gi\u00e1 tr\u1ecb ban \u0111\u1ea7u cho \u0111\u1ed1i t\u01b0\u1ee3ng. V\u00ed d\u1ee5: # Khai b\u00e1o l\u1edbp h\u1ecdc sinh class Student: # Khai b\u00e1o h\u00e0m kh\u1edfi t\u1ea1o def __init__(self, name, age): self.name = name self.age = age def PrintInfo(self): print('{}, {}'.format(self.name, self.age)) # T\u1ea1o \u0111\u1ed1i t\u01b0\u1ee3ng v\u00e0 kh\u1edfi t\u1ea1o gi\u00e1 tr\u1ecb sv1 = Student(\"Trung\", 18) sv2 = Student('Th\u1ef1c', 19) sv1.PrintInfo() sv2.PrintInfo()","title":"Ph\u01b0\u01a1ng th\u1ee9c __init__()"},{"location":"topics/python-oop/#lop-ben-trong-lop","text":"V\u00ed d\u1ee5: # Minh h\u1ecda c\u00e0i \u0111\u1eb7t l\u1edbp b\u00ean trong l\u1edbp # L\u1edbp Laptop (outer class) import datetime class Laptop: # Ph\u01b0\u01a1ng th\u1ee9c kh\u1edfi t\u1ea1o c\u1ee7a l\u1edbp ngo\u00e0i def __init__(self, model, year=datetime.datetime.now().year, btr_voltage=None, btr_capacity=None): assert isinstance(year, int) and year > 0, 'N\u0103m ph\u1ea3i l\u00e0 s\u1ed1 nguy\u00ean d\u01b0\u01a1ng' self.Model = model # model self.Year = year # n\u0103m s\u1ea3n xu\u1ea5t self.Battery = self.Battery(btr_voltage, btr_capacity) # Ph\u01b0\u01a1ng th\u1ee9c in th\u00f4ng tin c\u1ee7a l\u1edbp ngo\u00e0i def PrintInfo(self): print('Laptop model: {}, Year: {}'.format(self.Model, self.Year)) # G\u1ecdi ph\u01b0\u01a1ng th\u1ee9c in th\u00f4ng tin c\u1ee7a l\u1edbp trong self.Battery.PrintInfo() # C\u00e0i \u0111\u1eb7t l\u1edbp Battery (inner class) b\u00ean trong l\u1edbp Laptop class Battery: # Ph\u01b0\u01a1ng th\u1ee9c kh\u1edfi t\u1ea1o c\u1ee7a l\u1edbp trong def __init__(self, volate, capacity): self.Voltage = volate # \u0110i\u1ec7n th\u1ebf self.Capacity = capacity # Dung l\u01b0\u1ee3ng # Ph\u01b0\u01a1ng th\u1ee9c in th\u00f4ng tin c\u1ee7a l\u1edbp trong def PrintInfo(self): print('Battery info: Voltage: {}, Capacity: {}'.format(self.Voltage, self.Capacity)) # Ch\u01b0\u01a1ng tr\u00ecnh ch\u00ednh if __name__ == '__main__': lap1 = Laptop('Dell', 2020, '12V', '55kWh') lap1.PrintInfo()","title":"L\u1edbp b\u00ean trong l\u1edbp"}]}